{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.13", "generated_at": "2024-06-19T07:41:22.565441Z", "invocation_id": "a85ae541-16be-4538-84ed-d979574122b3", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:33.814911Z", "completed_at": "2024-06-19T07:40:34.218027Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:34.222467Z", "completed_at": "2024-06-19T07:40:34.222518Z"}], "thread_id": "Thread-3", "execution_time": 0.41646337509155273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.data_monitoring_metrics", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n    \n    select * from (\n            select\n            \n                \n        cast('dummy_string' as string) as id\n\n,\n                \n        cast('dummy_string' as string) as full_table_name\n\n,\n                \n        cast('dummy_string' as string) as column_name\n\n,\n                \n        cast('dummy_string' as string) as metric_name\n\n,\n                \n        cast(123456789.99 as float) as metric_value\n\n,\n                \n        cast('dummy_string' as string) as source_value\n\n,\n                cast('2091-02-17' as timestamp) as bucket_start\n\n,\n                cast('2091-02-17' as timestamp) as bucket_end\n\n,\n                \n        cast(123456789 as integer) as bucket_duration_hours\n\n,\n                cast('2091-02-17' as timestamp) as updated_at\n\n,\n                \n        cast('dummy_string' as string) as dimension\n\n,\n                \n        cast('dummy_string' as string) as dimension_value\n\n,\n                \n        cast('dummy_string' as string) as metric_properties\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "integration_dp.data_monitoring_metrics"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:34.233585Z", "completed_at": "2024-06-19T07:40:34.300756Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:34.305133Z", "completed_at": "2024-06-19T07:40:34.305157Z"}], "thread_id": "Thread-3", "execution_time": 0.07836747169494629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_columns", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as parent_unique_id\n\n,\n                \n        cast('dummy_string' as string) as name\n\n,\n                \n        cast('dummy_string' as string) as data_type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as meta\n\n,\n                \n        cast('dummy_string' as string) as database_name\n\n,\n                \n        cast('dummy_string' as string) as schema_name\n\n,\n                \n        cast('dummy_string' as string) as table_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as description\n\n,\n                \n        cast('dummy_string' as string) as resource_type\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                \n        cast('dummy_string' as string) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "integration_dp.dbt_columns"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:34.316236Z", "completed_at": "2024-06-19T07:40:35.213064Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:35.216237Z", "completed_at": "2024-06-19T07:40:35.216257Z"}], "thread_id": "Thread-3", "execution_time": 0.9062867164611816, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_exposures", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as name\n\n,\n                \n        cast('dummy_string' as string) as maturity\n\n,\n                \n        cast('dummy_string' as string) as type\n\n,\n                \n        cast('dummy_string' as string) as owner_email\n\n,\n                \n        cast('dummy_string' as string) as owner_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as url\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_columns\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as meta\n\n,\n                \n        cast('dummy_string' as string) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as original_path\n\n,\n                \n        cast('dummy_string' as string) as path\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                \n        cast('dummy_string' as string) as metadata_hash\n\n,\n                \n        cast('dummy_string' as string) as label\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as raw_queries\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "integration_dp.dbt_exposures"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:35.225368Z", "completed_at": "2024-06-19T07:40:35.687769Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:35.704853Z", "completed_at": "2024-06-19T07:40:35.704887Z"}], "thread_id": "Thread-3", "execution_time": 0.4860684871673584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_invocations", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as string) as invocation_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as job_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as job_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as job_run_id\n\n,\n                \n        cast('dummy_string' as string) as run_started_at\n\n,\n                \n        cast('dummy_string' as string) as run_completed_at\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n,\n                \n        cast('dummy_string' as string) as command\n\n,\n                \n        cast('dummy_string' as string) as dbt_version\n\n,\n                \n        cast('dummy_string' as string) as elementary_version\n\n,\n                \n        cast (True as boolean) as full_refresh\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as invocation_vars\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as vars\n\n,\n                \n        cast('dummy_string' as string) as target_name\n\n,\n                \n        cast('dummy_string' as string) as target_database\n\n,\n                \n        cast('dummy_string' as string) as target_schema\n\n,\n                \n        cast('dummy_string' as string) as target_profile_name\n\n,\n                \n        cast(123456789 as integer) as threads\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as selected\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as yaml_selector\n\n,\n                \n        cast('dummy_string' as string) as project_id\n\n,\n                \n        cast('dummy_string' as string) as project_name\n\n,\n                \n        cast('dummy_string' as string) as env\n\n,\n                \n        cast('dummy_string' as string) as env_id\n\n,\n                \n        cast('dummy_string' as string) as cause_category\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as cause\n\n,\n                \n        cast('dummy_string' as string) as pull_request_id\n\n,\n                \n        cast('dummy_string' as string) as git_sha\n\n,\n                \n        cast('dummy_string' as string) as orchestrator\n\n,\n                \n        cast('dummy_string' as string) as dbt_user\n\n,\n                \n        cast('dummy_string' as string) as job_url\n\n,\n                \n        cast('dummy_string' as string) as job_run_url\n\n,\n                \n        cast('dummy_string' as string) as account_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as target_adapter_specific_fields\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "integration_dp.dbt_invocations"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:35.717091Z", "completed_at": "2024-06-19T07:40:36.243868Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:36.247643Z", "completed_at": "2024-06-19T07:40:36.247677Z"}], "thread_id": "Thread-3", "execution_time": 0.5390267372131348, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_metrics", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as name\n\n,\n                \n        cast('dummy_string' as string) as label\n\n,\n                \n        cast('dummy_string' as string) as model\n\n,\n                \n        cast('dummy_string' as string) as type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as sql\n\n,\n                \n        cast('dummy_string' as string) as timestamp\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as filters\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as time_grains\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as dimensions\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as meta\n\n,\n                \n        cast('dummy_string' as string) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as original_path\n\n,\n                \n        cast('dummy_string' as string) as path\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                \n        cast('dummy_string' as string) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "integration_dp.dbt_metrics"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:36.285267Z", "completed_at": "2024-06-19T07:40:36.818402Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:36.823310Z", "completed_at": "2024-06-19T07:40:36.823345Z"}], "thread_id": "Thread-3", "execution_time": 0.5753443241119385, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_models", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as alias\n\n,\n                \n        cast('dummy_string' as string) as checksum\n\n,\n                \n        cast('dummy_string' as string) as materialization\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as meta\n\n,\n                \n        cast('dummy_string' as string) as owner\n\n,\n                \n        cast('dummy_string' as string) as database_name\n\n,\n                \n        cast('dummy_string' as string) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as description\n\n,\n                \n        cast('dummy_string' as string) as name\n\n,\n                \n        cast('dummy_string' as string) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as original_path\n\n,\n                \n        cast('dummy_string' as string) as path\n\n,\n                \n        cast('dummy_string' as string) as patch_path\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                \n        cast('dummy_string' as string) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "integration_dp.dbt_models"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:36.861006Z", "completed_at": "2024-06-19T07:40:38.006952Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:38.010378Z", "completed_at": "2024-06-19T07:40:38.010401Z"}], "thread_id": "Thread-3", "execution_time": 1.1706664562225342, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_run_results", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as string) as model_execution_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as invocation_id\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as message\n\n,\n                \n        cast('dummy_string' as string) as status\n\n,\n                \n        cast('dummy_string' as string) as resource_type\n\n,\n                \n        cast(123456789.99 as float) as execution_time\n\n,\n                \n        cast('dummy_string' as string) as execute_started_at\n\n,\n                \n        cast('dummy_string' as string) as execute_completed_at\n\n,\n                \n        cast('dummy_string' as string) as compile_started_at\n\n,\n                \n        cast('dummy_string' as string) as compile_completed_at\n\n,\n                \n        cast(31474836478 as bigint) as rows_affected\n\n,\n                \n        cast (True as boolean) as full_refresh\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as compiled_code\n\n,\n                \n        cast(31474836478 as bigint) as failures\n\n,\n                \n        cast('dummy_string' as string) as query_id\n\n,\n                \n        cast('dummy_string' as string) as thread_id\n\n,\n                \n        cast('dummy_string' as string) as materialization\n\n,\n                \n        cast('dummy_string' as string) as adapter_response\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "integration_dp.dbt_run_results"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:38.390819Z", "completed_at": "2024-06-19T07:40:39.453308Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:39.459167Z", "completed_at": "2024-06-19T07:40:39.459203Z"}], "thread_id": "Thread-3", "execution_time": 1.445051670074463, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_seeds", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as alias\n\n,\n                \n        cast('dummy_string' as string) as checksum\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as meta\n\n,\n                \n        cast('dummy_string' as string) as owner\n\n,\n                \n        cast('dummy_string' as string) as database_name\n\n,\n                \n        cast('dummy_string' as string) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as description\n\n,\n                \n        cast('dummy_string' as string) as name\n\n,\n                \n        cast('dummy_string' as string) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as original_path\n\n,\n                \n        cast('dummy_string' as string) as path\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                \n        cast('dummy_string' as string) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "integration_dp.dbt_seeds"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:39.475802Z", "completed_at": "2024-06-19T07:40:40.076528Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:40.081251Z", "completed_at": "2024-06-19T07:40:40.081277Z"}], "thread_id": "Thread-3", "execution_time": 0.6159443855285645, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_snapshots", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as alias\n\n,\n                \n        cast('dummy_string' as string) as checksum\n\n,\n                \n        cast('dummy_string' as string) as materialization\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as meta\n\n,\n                \n        cast('dummy_string' as string) as owner\n\n,\n                \n        cast('dummy_string' as string) as database_name\n\n,\n                \n        cast('dummy_string' as string) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as description\n\n,\n                \n        cast('dummy_string' as string) as name\n\n,\n                \n        cast('dummy_string' as string) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as original_path\n\n,\n                \n        cast('dummy_string' as string) as path\n\n,\n                \n        cast('dummy_string' as string) as patch_path\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                \n        cast('dummy_string' as string) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "integration_dp.dbt_snapshots"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:40.670727Z", "completed_at": "2024-06-19T07:40:41.851967Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:42.213884Z", "completed_at": "2024-06-19T07:40:42.213933Z"}], "thread_id": "Thread-3", "execution_time": 1.6345317363739014, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_source_freshness_results", "compiled": true, "compiled_code": "\n\n\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as string) as source_freshness_execution_id\n\n,\n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as max_loaded_at\n\n,\n                \n        cast('dummy_string' as string) as snapshotted_at\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n,\n                \n        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s\n\n,\n                \n        cast('dummy_string' as string) as status\n\n,\n                \n        cast('dummy_string' as string) as error\n\n,\n                \n        cast('dummy_string' as string) as compile_started_at\n\n,\n                \n        cast('dummy_string' as string) as compile_completed_at\n\n,\n                \n        cast('dummy_string' as string) as execute_started_at\n\n,\n                \n        cast('dummy_string' as string) as execute_completed_at\n\n,\n                \n        cast('dummy_string' as string) as invocation_id\n\n,\n                \n        cast('dummy_string' as string) as warn_after\n\n,\n                \n        cast('dummy_string' as string) as error_after\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as filter\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "integration_dp.dbt_source_freshness_results"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:42.228115Z", "completed_at": "2024-06-19T07:40:42.294597Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:42.297719Z", "completed_at": "2024-06-19T07:40:42.297739Z"}], "thread_id": "Thread-3", "execution_time": 0.07656025886535645, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_sources", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as database_name\n\n,\n                \n        cast('dummy_string' as string) as schema_name\n\n,\n                \n        cast('dummy_string' as string) as source_name\n\n,\n                \n        cast('dummy_string' as string) as name\n\n,\n                \n        cast('dummy_string' as string) as identifier\n\n,\n                \n        cast('dummy_string' as string) as loaded_at_field\n\n,\n                \n        cast('dummy_string' as string) as freshness_warn_after\n\n,\n                \n        cast('dummy_string' as string) as freshness_error_after\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as freshness_filter\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as freshness_description\n\n,\n                \n        cast('dummy_string' as string) as relation_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as meta\n\n,\n                \n        cast('dummy_string' as string) as owner\n\n,\n                \n        cast('dummy_string' as string) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as original_path\n\n,\n                \n        cast('dummy_string' as string) as path\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as source_description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as description\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                \n        cast('dummy_string' as string) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "integration_dp.dbt_sources"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:42.307608Z", "completed_at": "2024-06-19T07:40:42.363780Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:42.367139Z", "completed_at": "2024-06-19T07:40:42.367165Z"}], "thread_id": "Thread-3", "execution_time": 0.06544876098632812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_tests", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as database_name\n\n,\n                \n        cast('dummy_string' as string) as schema_name\n\n,\n                \n        cast('dummy_string' as string) as name\n\n,\n                \n        cast('dummy_string' as string) as short_name\n\n,\n                \n        cast('dummy_string' as string) as alias\n\n,\n                \n        cast('dummy_string' as string) as test_column_name\n\n,\n                \n        cast('dummy_string' as string) as severity\n\n,\n                \n        cast('dummy_string' as string) as warn_if\n\n,\n                \n        cast('dummy_string' as string) as error_if\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as test_params\n\n,\n                \n        cast('dummy_string' as string) as test_namespace\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as model_tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as model_owners\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as meta\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_nodes\n\n,\n                \n        cast('dummy_string' as string) as parent_model_unique_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as description\n\n,\n                \n        cast('dummy_string' as string) as package_name\n\n,\n                \n        cast('dummy_string' as string) as type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as original_path\n\n,\n                \n        cast('dummy_string' as string) as path\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                \n        cast('dummy_string' as string) as metadata_hash\n\n,\n                \n        cast('dummy_string' as string) as quality_dimension\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "integration_dp.dbt_tests"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:42.376481Z", "completed_at": "2024-06-19T07:40:44.048489Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:44.060982Z", "completed_at": "2024-06-19T07:40:44.061015Z"}], "thread_id": "Thread-3", "execution_time": 1.704019546508789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.elementary_test_results", "compiled": true, "compiled_code": "\n\n\n    select * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as string) as id\n\n,\n                \n        cast('dummy_string' as string) as data_issue_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as test_execution_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as test_unique_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as model_unique_id\n\n,\n                \n        cast('dummy_string' as string) as invocation_id\n\n,\n                cast('2091-02-17' as timestamp) as detected_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n,\n                \n        cast('dummy_string' as string) as database_name\n\n,\n                \n        cast('dummy_string' as string) as schema_name\n\n,\n                \n        cast('dummy_string' as string) as table_name\n\n,\n                \n        cast('dummy_string' as string) as column_name\n\n,\n                \n        cast('dummy_string' as string) as test_type\n\n,\n                \n        cast('dummy_string' as string) as test_sub_type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as test_results_description\n\n,\n                \n        cast('dummy_string' as string) as owners\n\n,\n                \n        cast('dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as test_results_query\n\n,\n                \n        cast('dummy_string' as string) as other\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as test_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as test_params\n\n,\n                \n        cast('dummy_string' as string) as severity\n\n,\n                \n        cast('dummy_string' as string) as status\n\n,\n                \n        cast(31474836478 as bigint) as failures\n\n,\n                \n        cast('dummy_string' as string) as test_short_name\n\n,\n                \n        cast('dummy_string' as string) as test_alias\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as result_rows\n\n,\n                \n        cast(31474836478 as bigint) as failed_row_count\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "integration_dp.elementary_test_results"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:44.105496Z", "completed_at": "2024-06-19T07:40:44.162394Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:44.170676Z", "completed_at": "2024-06-19T07:40:44.170714Z"}], "thread_id": "Thread-3", "execution_time": 0.0817255973815918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.metadata", "compiled": true, "compiled_code": "\n\nSELECT\n    '0.15.2' as dbt_pkg_version", "relation_name": "integration_dp.metadata"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:44.192330Z", "completed_at": "2024-06-19T07:40:44.619310Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:44.624163Z", "completed_at": "2024-06-19T07:40:44.624194Z"}], "thread_id": "Thread-3", "execution_time": 0.44850945472717285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.schema_columns_snapshot", "compiled": true, "compiled_code": "\n\n\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as string) as column_state_id\n\n,\n                \n        cast('dummy_string' as string) as full_column_name\n\n,\n                \n        cast('dummy_string' as string) as full_table_name\n\n,\n                \n        cast('dummy_string' as string) as column_name\n\n,\n                \n        cast('dummy_string' as string) as data_type\n\n,\n                \n        cast (True as boolean) as is_new\n\n,\n                cast('2091-02-17' as timestamp) as detected_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "integration_dp.schema_columns_snapshot"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:44.641253Z", "completed_at": "2024-06-19T07:40:45.746516Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:45.750001Z", "completed_at": "2024-06-19T07:40:45.750026Z"}], "thread_id": "Thread-3", "execution_time": 1.1163976192474365, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ktl_dbt.hub_account", "compiled": true, "compiled_code": "with\n        cte_stg_hub as (\n            select\n                sha2(coalesce(nullif(rtrim(upper(cast(ln_ac_nbr as string))), ''), '-1') || '#~!' || 'mdm', 256) as dv_hkey_hub_account,\n\n                coalesce(nullif(rtrim(upper(cast(ln_ac_nbr as string))), ''), '-1') as ln_ac_nbr,\n                \n\n                current_ts as dv_kaf_ldt,\n                offset as dv_kaf_ofs,\n                op_type as dv_cdc_ops,\n                op_ts as dv_src_ldt,\n                table as dv_src_rec,\n                current_timestamp() as dv_ldt,\n                \n\n                'mdm' as dv_ccd\n\n            from\n                {source.loan_info}\n            where\n                1 = 1\n                and ln_ac_nbr is not null\n                \n        ),\n\n        cte_stg_hub_latest_records as (\n            select *\n            from\n                (\n                    select\n                        *,\n\n                        row_number() over (\n                            partition by dv_hkey_hub_account\n                            order by\n                                dv_src_ldt asc,\n                                dv_kaf_ldt asc,\n                                dv_kaf_ofs asc\n                                \n                        ) as row_num\n\n                    from cte_stg_hub\n                )\n            where row_num = 1\n        ),\n\n            cte_stg_hub_existed_keys as (\n                select dv_hkey_hub_account\n                from cte_stg_hub src\n                where\n                    exists (\n                        select 1\n                        from integration_dp.hub_account tgt\n                        where tgt.dv_hkey_hub_account = src.dv_hkey_hub_account\n                    )\n            )\n\n    select\n        dv_hkey_hub_account,\n\n        ln_ac_nbr,\n        \n\n        dv_kaf_ldt,\n        dv_kaf_ofs,\n        dv_cdc_ops,\n        dv_src_ldt,\n        dv_src_rec,\n        dv_ldt,\n        \n\n        dv_ccd\n\n    from cte_stg_hub_latest_records src\n\n        where\n            not exists (\n                select 1\n                from cte_stg_hub_existed_keys tgt\n                where tgt.dv_hkey_hub_account = src.dv_hkey_hub_account\n            )", "relation_name": "integration_dp.hub_account"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:45.788034Z", "completed_at": "2024-06-19T07:40:45.826021Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:45.837056Z", "completed_at": "2024-06-19T07:40:45.837078Z"}], "thread_id": "Thread-3", "execution_time": 0.05549216270446777, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ktl_dbt.hub_branch", "compiled": true, "compiled_code": "with\n        cte_stg_hub as (\n            select\n                sha2(coalesce(nullif(rtrim(upper(cast(br_cd as string))), ''), '-1') || '#~!' || 'mdm', 256) as dv_hkey_hub_branch,\n\n                br_cd,\n                \n\n                current_ts as dv_kaf_ldt,\n                offset as dv_kaf_ofs,\n                op_type as dv_cdc_ops,\n                op_ts as dv_src_ldt,\n                table as dv_src_rec,\n                current_timestamp() as dv_ldt,\n                \n\n                'mdm' as dv_ccd\n\n            from\n                {source.branch}\n            where\n                1 = 1\n                and br_cd is not null\n                \n        ),\n\n        cte_stg_hub_latest_records as (\n            select *\n            from\n                (\n                    select\n                        *,\n\n                        row_number() over (\n                            partition by dv_hkey_hub_branch\n                            order by\n                                dv_src_ldt asc,\n                                dv_kaf_ldt asc,\n                                dv_kaf_ofs asc\n                                \n                        ) as row_num\n\n                    from cte_stg_hub\n                )\n            where row_num = 1\n        ),\n\n            cte_stg_hub_existed_keys as (\n                select dv_hkey_hub_branch\n                from cte_stg_hub src\n                where\n                    exists (\n                        select 1\n                        from integration_dp.hub_branch tgt\n                        where tgt.dv_hkey_hub_branch = src.dv_hkey_hub_branch\n                    )\n            )\n\n    select\n        dv_hkey_hub_branch,\n\n        br_cd,\n        \n\n        dv_kaf_ldt,\n        dv_kaf_ofs,\n        dv_cdc_ops,\n        dv_src_ldt,\n        dv_src_rec,\n        dv_ldt,\n        \n\n        dv_ccd\n\n    from cte_stg_hub_latest_records src\n\n        where\n            not exists (\n                select 1\n                from cte_stg_hub_existed_keys tgt\n                where tgt.dv_hkey_hub_branch = src.dv_hkey_hub_branch\n            )", "relation_name": "integration_dp.hub_branch"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:46.197650Z", "completed_at": "2024-06-19T07:40:46.227769Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:46.231137Z", "completed_at": "2024-06-19T07:40:46.231157Z"}], "thread_id": "Thread-3", "execution_time": 0.38659048080444336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ktl_dbt.hub_customer", "compiled": true, "compiled_code": "with\n        cte_stg_hub as (\n            select\n                sha2(coalesce(nullif(rtrim(upper(cast(cst_no as string))), ''), '-1') || '#~!' || 'mdm', 256) as dv_hkey_hub_customer,\n\n                cst_no,\n                \n\n                current_ts as dv_kaf_ldt,\n                offset as dv_kaf_ofs,\n                op_type as dv_cdc_ops,\n                op_ts as dv_src_ldt,\n                table as dv_src_rec,\n                current_timestamp() as dv_ldt,\n                \n\n                'mdm' as dv_ccd\n\n            from\n                {source.customers_corebank}\n            where\n                1 = 1\n                and cst_no is not null\n                \n        ),\n\n        cte_stg_hub_latest_records as (\n            select *\n            from\n                (\n                    select\n                        *,\n\n                        row_number() over (\n                            partition by dv_hkey_hub_customer\n                            order by\n                                dv_src_ldt asc,\n                                dv_kaf_ldt asc,\n                                dv_kaf_ofs asc\n                                \n                        ) as row_num\n\n                    from cte_stg_hub\n                )\n            where row_num = 1\n        ),\n\n            cte_stg_hub_existed_keys as (\n                select dv_hkey_hub_customer\n                from cte_stg_hub src\n                where\n                    exists (\n                        select 1\n                        from integration_dp.hub_customer tgt\n                        where tgt.dv_hkey_hub_customer = src.dv_hkey_hub_customer\n                    )\n            )\n\n    select\n        dv_hkey_hub_customer,\n\n        cst_no,\n        \n\n        dv_kaf_ldt,\n        dv_kaf_ofs,\n        dv_cdc_ops,\n        dv_src_ldt,\n        dv_src_rec,\n        dv_ldt,\n        \n\n        dv_ccd\n\n    from cte_stg_hub_latest_records src\n\n        where\n            not exists (\n                select 1\n                from cte_stg_hub_existed_keys tgt\n                where tgt.dv_hkey_hub_customer = src.dv_hkey_hub_customer\n            )", "relation_name": "integration_dp.hub_customer"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:46.250052Z", "completed_at": "2024-06-19T07:40:47.618851Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:47.623405Z", "completed_at": "2024-06-19T07:40:47.623435Z"}], "thread_id": "Thread-3", "execution_time": 1.3840265274047852, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ktl_dbt.lnk_customer_account", "compiled": true, "compiled_code": "with\n        cte_stg_lnk as (\n            select\n                sha2(coalesce(nullif(rtrim(upper(cast(ln_ac_nbr as string))), ''), '-1') || '#~!' || coalesce(nullif(rtrim(upper(cast(cst_no as string))), ''), '-1') || '#~!' || 'mdm', 256) as dv_hkey_lnk_customer_account,\n\n                sha2(coalesce(nullif(rtrim(upper(cast(ln_ac_nbr as string))), ''), '-1') || '#~!' || 'mdm', 256) as dv_hkey_hub_account,\n                sha2(coalesce(nullif(rtrim(upper(cast(cst_no as string))), ''), '-1') || '#~!' || 'mdm', 256) as dv_hkey_hub_customer,\n                \n\n                current_ts as dv_kaf_ldt,\n                offset as dv_kaf_ofs,\n                op_type as dv_cdc_ops,\n                op_ts as dv_src_ldt,\n                table as dv_src_rec,\n                current_timestamp() as dv_ldt\n                \n\n            from\n                {source.loan_info}\n            where\n                1 = 1\n                and ln_ac_nbr is not null\n                and cst_no is not null\n                \n        ),\n        \n        cte_stg_lnk_latest_records as (\n            select *\n            from\n                (\n                    select\n                        *,\n                        row_number() over (\n                            partition by dv_hkey_lnk_customer_account\n                            order by\n                                dv_src_ldt asc,\n                                dv_kaf_ldt asc,\n                                dv_kaf_ofs asc\n                                \n                        ) as row_num\n                    from cte_stg_lnk\n                )\n            where row_num = 1\n        ),\n\n            cte_stg_lnk_existed_keys as (\n                select dv_hkey_lnk_customer_account\n                from cte_stg_lnk src\n                where\n                    exists (\n                        select 1\n                        from integration_dp.lnk_customer_account tgt\n                        where tgt.dv_hkey_lnk_customer_account = src.dv_hkey_lnk_customer_account\n                    )\n            )\n\n    select\n        dv_hkey_lnk_customer_account,\n\n        dv_hkey_hub_account,\n        dv_hkey_hub_customer,\n        \n\n        dv_kaf_ldt,\n        dv_kaf_ofs,\n        dv_cdc_ops,\n        dv_src_ldt,\n        dv_src_rec,\n        dv_ldt\n        \n\n    from cte_stg_lnk_latest_records src\n\n        where\n            not exists (\n                select 1\n                from cte_stg_lnk_existed_keys tgt\n                where tgt.dv_hkey_lnk_customer_account = src.dv_hkey_lnk_customer_account\n            )", "relation_name": "integration_dp.lnk_customer_account"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:47.634783Z", "completed_at": "2024-06-19T07:40:47.769946Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:48.325900Z", "completed_at": "2024-06-19T07:40:48.325929Z"}], "thread_id": "Thread-3", "execution_time": 0.6988327503204346, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ktl_dbt.lsat_der_customer_account", "compiled": true, "compiled_code": "select\n        sha2(coalesce(nullif(rtrim(upper(cast(ln_ac_nbr as string))), ''), '-1') || '#~!' || coalesce(nullif(rtrim(upper(cast(cst_no as string))), ''), '-1') || '#~!' || coalesce(nullif(rtrim(cast(op_ts as string)), ''), '-1') || '#~!' || coalesce(nullif(rtrim(cast(current_ts as string)), ''), '-1') || '#~!' || coalesce(nullif(rtrim(cast(offset as string)), ''), '-1') || '#~!' || 'mdm', 256) as dv_hkey_lsat_customer_account,\n        sha2(coalesce(nullif(rtrim(upper(cast(ln_ac_nbr as string))), ''), '-1') || '#~!' || coalesce(nullif(rtrim(upper(cast(cst_no as string))), ''), '-1') || '#~!' || 'mdm', 256) as dv_hkey_lnk_customer_account,\n        sha2(coalesce(nullif(rtrim(cast(br_cd as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(book_date as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(value_date as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(maturity_date as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(amt_financed as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(close_date as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(account_status as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(sub_cd as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(ten_sp_ksp as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(ccy_cd as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(product_code as string)), ''), repeat('0', 16)), 256) as dv_hsh_dif,\n\n        \n\n        br_cd,\n        book_date,\n        value_date,\n        maturity_date,\n        amt_financed,\n        close_date,\n        account_status,\n        sub_cd,\n        ten_sp_ksp,\n        ccy_cd,\n        product_code,\n        \n\n        current_ts as dv_kaf_ldt,\n        offset as dv_kaf_ofs,\n        op_type as dv_cdc_ops,\n        op_ts as dv_src_ldt,\n        table as dv_src_rec,\n        current_timestamp() as dv_ldt\n        \n\n    from {source.loan_info}\n    where\n        op_ts >= date'2024-01-01'\n\n        and ln_ac_nbr is not null\n        and cst_no is not null\n        ", "relation_name": "integration_dp.lsat_der_customer_account"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:48.339482Z", "completed_at": "2024-06-19T07:40:48.423339Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:48.426991Z", "completed_at": "2024-06-19T07:40:48.427015Z"}], "thread_id": "Thread-3", "execution_time": 0.09730935096740723, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ktl_dbt.sat_der_account", "compiled": true, "compiled_code": "select\n        sha2(coalesce(nullif(rtrim(upper(cast(ln_ac_nbr as string))), ''), '-1') || '#~!' || coalesce(nullif(rtrim(cast(op_ts as string)), ''), '-1') || '#~!' || coalesce(nullif(rtrim(cast(current_ts as string)), ''), '-1') || '#~!' || coalesce(nullif(rtrim(cast(offset as string)), ''), '-1') || '#~!' || 'mdm', 256) as dv_hkey_sat_account,\n        sha2(coalesce(nullif(rtrim(upper(cast(ln_ac_nbr as string))), ''), '-1') || '#~!' || 'mdm', 256) as dv_hkey_hub_account,\n        sha2(coalesce(nullif(rtrim(cast(br_cd as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(book_date as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(value_date as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(maturity_date as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(cst_no as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(amt_financed as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(close_date as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(account_status as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(sub_cd as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(ten_sp_ksp as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(ccy_cd as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(product_code as string)), ''), repeat('0', 16)), 256) as dv_hsh_dif,\n\n        \n\n        br_cd,\n        book_date,\n        value_date,\n        maturity_date,\n        cst_no,\n        amt_financed,\n        close_date,\n        account_status,\n        sub_cd,\n        ten_sp_ksp,\n        ccy_cd,\n        product_code,\n        \n\n        current_ts as dv_kaf_ldt,\n        offset as dv_kaf_ofs,\n        op_type as dv_cdc_ops,\n        op_ts as dv_src_ldt,\n        table as dv_src_rec,\n        current_timestamp() as dv_ldt\n        \n\n    from {source.loan_info}\n    where\n        op_ts >= date'2024-01-01'\n\n        and ln_ac_nbr is not null\n        ", "relation_name": "integration_dp.sat_der_account"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:48.449094Z", "completed_at": "2024-06-19T07:40:48.905075Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:48.911979Z", "completed_at": "2024-06-19T07:40:48.913840Z"}], "thread_id": "Thread-3", "execution_time": 0.473297119140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ktl_dbt.sat_der_customer", "compiled": true, "compiled_code": "select\n        sha2(coalesce(nullif(rtrim(upper(cast(cst_no as string))), ''), '-1') || '#~!' || coalesce(nullif(rtrim(cast(op_ts as string)), ''), '-1') || '#~!' || coalesce(nullif(rtrim(cast(current_ts as string)), ''), '-1') || '#~!' || coalesce(nullif(rtrim(cast(offset as string)), ''), '-1') || '#~!' || 'mdm', 256) as dv_hkey_sat_customer,\n        sha2(coalesce(nullif(rtrim(upper(cast(cst_no as string))), ''), '-1') || '#~!' || 'mdm', 256) as dv_hkey_hub_customer,\n        sha2(coalesce(nullif(rtrim(cast(cst_nm as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(cst_full_nm as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(cst_type as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(br_cd as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(addr_pri as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(address_line4 as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(address_line3 as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(create_dt as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(record_stat as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(sex as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(id_number as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(type_of_id as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(date_of_issue as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(place_of_issue as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(phone as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(birth_day as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(income_levcd as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(educ_levcd as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(mail_typcd as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(occptn_cd as string)), ''), repeat('0', 16)), 256) as dv_hsh_dif,\n\n        \n\n        cst_nm,\n        cst_full_nm,\n        cst_type,\n        br_cd,\n        addr_pri,\n        address_line4,\n        address_line3,\n        create_dt,\n        record_stat,\n        sex,\n        id_number,\n        type_of_id,\n        date_of_issue,\n        place_of_issue,\n        phone,\n        birth_day,\n        income_levcd,\n        educ_levcd,\n        mail_typcd,\n        occptn_cd,\n        \n\n        current_ts as dv_kaf_ldt,\n        offset as dv_kaf_ofs,\n        op_type as dv_cdc_ops,\n        op_ts as dv_src_ldt,\n        table as dv_src_rec,\n        current_timestamp() as dv_ldt\n        \n\n    from {source.customers_corebank}\n    where\n        op_ts >= date'2024-01-01'\n\n        and cst_no is not null\n        ", "relation_name": "integration_dp.sat_der_customer"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:48.928892Z", "completed_at": "2024-06-19T07:40:48.987685Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:48.991742Z", "completed_at": "2024-06-19T07:40:48.991772Z"}], "thread_id": "Thread-3", "execution_time": 0.07244563102722168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ktl_dbt.sat_der_customer_corecard", "compiled": true, "compiled_code": "select\n        sha2(coalesce(nullif(rtrim(upper(cast(customer_no as string))), ''), '-1') || '#~!' || coalesce(nullif(rtrim(cast(op_ts as string)), ''), '-1') || '#~!' || coalesce(nullif(rtrim(cast(current_ts as string)), ''), '-1') || '#~!' || coalesce(nullif(rtrim(cast(offset as string)), ''), '-1') || '#~!' || 'mdm', 256) as dv_hkey_sat_customer_corecard,\n        sha2(coalesce(nullif(rtrim(upper(cast(customer_no as string))), ''), '-1') || '#~!' || 'mdm', 256) as dv_hkey_hub_customer,\n        sha2(coalesce(nullif(rtrim(cast(card_no as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(card_name as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(card_full_name as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(card_type as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(acct_no as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(addr_line1 as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(addr_line2 as string)), ''), repeat('0', 16)), 256) as dv_hsh_dif,\n\n        \n\n        card_no,\n        card_name,\n        card_full_name,\n        card_type,\n        acct_no,\n        addr_line1,\n        addr_line2,\n        \n\n        current_ts as dv_kaf_ldt,\n        offset as dv_kaf_ofs,\n        op_type as dv_cdc_ops,\n        op_ts as dv_src_ldt,\n        table as dv_src_rec,\n        current_timestamp() as dv_ldt\n        \n\n    from {source.customers_corecard}\n    where\n        op_ts >= date'2024-01-01'\n\n        and customer_no is not null\n        ", "relation_name": "integration_dp.sat_der_customer_corecard"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:49.019079Z", "completed_at": "2024-06-19T07:40:49.574031Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:49.577515Z", "completed_at": "2024-06-19T07:40:49.577538Z"}], "thread_id": "Thread-3", "execution_time": 1.1371958255767822, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ktl_dbt.sat_der_customer_los", "compiled": true, "compiled_code": "select\n        sha2(coalesce(nullif(rtrim(upper(cast(customer_no as string))), ''), '-1') || '#~!' || coalesce(nullif(rtrim(cast(op_ts as string)), ''), '-1') || '#~!' || coalesce(nullif(rtrim(cast(current_ts as string)), ''), '-1') || '#~!' || coalesce(nullif(rtrim(cast(offset as string)), ''), '-1') || '#~!' || 'mdm', 256) as dv_hkey_sat_customer_los,\n        sha2(coalesce(nullif(rtrim(upper(cast(customer_no as string))), ''), '-1') || '#~!' || 'mdm', 256) as dv_hkey_hub_customer,\n        sha2(coalesce(nullif(rtrim(cast(customer_name as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(credit_no as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(limit_value as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(income_levcd as string)), ''), repeat('0', 16)) || '#~!' || coalesce(nullif(rtrim(cast(occptn_cd as string)), ''), repeat('0', 16)), 256) as dv_hsh_dif,\n\n        \n\n        customer_name,\n        credit_no,\n        limit_value,\n        income_levcd,\n        occptn_cd,\n        \n\n        current_ts as dv_kaf_ldt,\n        offset as dv_kaf_ofs,\n        op_type as dv_cdc_ops,\n        op_ts as dv_src_ldt,\n        table as dv_src_rec,\n        current_timestamp() as dv_ldt\n        \n\n    from {source.customers_los}\n    where\n        op_ts >= date'2024-01-01'\n\n        and customer_no is not null\n        ", "relation_name": "integration_dp.sat_der_customer_los"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:50.165726Z", "completed_at": "2024-06-19T07:40:51.924045Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:51.932395Z", "completed_at": "2024-06-19T07:40:51.932421Z"}], "thread_id": "Thread-3", "execution_time": 1.7794303894042969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.elementary.elementary-on-run-end-0", "compiled": true, "compiled_code": "\n      \n      \n\n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n\n      \n        \n      \n\n      \n      \n        \n      \n  \n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:52.440128Z", "completed_at": "2024-06-19T07:40:53.197122Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:53.202107Z", "completed_at": "2024-06-19T07:40:53.202138Z"}], "thread_id": "Thread-3", "execution_time": 0.8790640830993652, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.elementary.elementary-on-run-start-0", "compiled": true, "compiled_code": "\n  \n  \n\n  \n  \n  \n\n  \n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:53.273274Z", "completed_at": "2024-06-19T07:40:53.332254Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:53.335333Z", "completed_at": "2024-06-19T07:40:53.335352Z"}], "thread_id": "Thread-3", "execution_time": 0.07241392135620117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.metrics_anomaly_score", "compiled": true, "compiled_code": "\n\nwith data_monitoring_metrics as (\n\n    select * from integration_dp.data_monitoring_metrics\n\n),\n\ntime_window_aggregation as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        metric_value,\n        source_value,\n        bucket_start,\n        bucket_end,\n        bucket_duration_hours,\n        updated_at,\n        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,\n        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,\n        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,\n        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,\n        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start\n    from data_monitoring_metrics\n    group by 1,2,3,4,5,6,7,8,9,10,11,12\n),\n\nmetrics_anomaly_score as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        case\n            when training_stddev is null then null\n            when training_stddev = 0 then 0\n            else (metric_value - training_avg) / (training_stddev)\n        end as anomaly_score,\n        metric_value as latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        max(updated_at) as updated_at\n    from time_window_aggregation\n        where\n            metric_value is not null\n            and training_avg is not null\n            and bucket_end >= \n    dateadd(day, cast(-7 as integer), cast(date_trunc('day', \n    cast(current_timestamp() as timestamp)\n) as timestamp))\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15\n    order by bucket_end desc\n\n\n),\n\nfinal as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        anomaly_score,\n        latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        updated_at,\n        case\n            when abs(anomaly_score) > 3 then true\n            else false end\n        as is_anomaly\n    from metrics_anomaly_score\n)\n\nselect * from final", "relation_name": "integration_dp.metrics_anomaly_score"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:53.993363Z", "completed_at": "2024-06-19T07:40:54.014450Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:54.032166Z", "completed_at": "2024-06-19T07:40:54.032193Z"}], "thread_id": "Thread-3", "execution_time": 0.04768729209899902, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.monitors_runs", "compiled": true, "compiled_code": "\n\nwith data_monitoring_metrics as (\n\n    select * from integration_dp.data_monitoring_metrics\n\n),\n\nmax_bucket_end as (\n\n    select full_table_name,\n           column_name,\n           metric_name,\n           metric_properties,\n           max(bucket_end) as last_bucket_end,\n           min(bucket_end) as first_bucket_end\n    from data_monitoring_metrics\n    group by 1,2,3,4\n\n)\n\nselect * from max_bucket_end", "relation_name": "integration_dp.monitors_runs"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:54.063613Z", "completed_at": "2024-06-19T07:40:55.266178Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:55.269318Z", "completed_at": "2024-06-19T07:40:55.269340Z"}], "thread_id": "Thread-3", "execution_time": 1.2242851257324219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.job_run_results", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith jobs as (\n  select\n    job_name,\n    job_id,\n    job_run_id,\n    \nmin(cast(run_started_at as timestamp))\n as job_run_started_at,\n    \nmax(cast(run_completed_at as timestamp))\n as job_run_completed_at,\n    \n    case when \nmin(cast(run_started_at as timestamp))\n < \nmax(cast(run_completed_at as timestamp))\n\n            then floor((\n                \n                \n\n    coalesce(to_unix_timestamp(\n\n    coalesce(to_timestamp(\nmax(cast(run_completed_at as timestamp))\n), nvl2(to_timestamp(\nmax(cast(run_completed_at as timestamp))\n), assert_true(to_timestamp(\nmax(cast(run_completed_at as timestamp))\n) is not null), null))\n\n), nvl2(to_unix_timestamp(\n\n    coalesce(to_timestamp(\nmax(cast(run_completed_at as timestamp))\n), nvl2(to_timestamp(\nmax(cast(run_completed_at as timestamp))\n), assert_true(to_timestamp(\nmax(cast(run_completed_at as timestamp))\n) is not null), null))\n\n), assert_true(to_unix_timestamp(\n\n    coalesce(to_timestamp(\nmax(cast(run_completed_at as timestamp))\n), nvl2(to_timestamp(\nmax(cast(run_completed_at as timestamp))\n), assert_true(to_timestamp(\nmax(cast(run_completed_at as timestamp))\n) is not null), null))\n\n) is not null), null))\n\n\n                - \n\n    coalesce(to_unix_timestamp(\n\n    coalesce(to_timestamp(\nmin(cast(run_started_at as timestamp))\n), nvl2(to_timestamp(\nmin(cast(run_started_at as timestamp))\n), assert_true(to_timestamp(\nmin(cast(run_started_at as timestamp))\n) is not null), null))\n\n), nvl2(to_unix_timestamp(\n\n    coalesce(to_timestamp(\nmin(cast(run_started_at as timestamp))\n), nvl2(to_timestamp(\nmin(cast(run_started_at as timestamp))\n), assert_true(to_timestamp(\nmin(cast(run_started_at as timestamp))\n) is not null), null))\n\n), assert_true(to_unix_timestamp(\n\n    coalesce(to_timestamp(\nmin(cast(run_started_at as timestamp))\n), nvl2(to_timestamp(\nmin(cast(run_started_at as timestamp))\n), assert_true(to_timestamp(\nmin(cast(run_started_at as timestamp))\n) is not null), null))\n\n) is not null), null))\n\n\n            ) / 1)\n            else ceil((\n                \n\n    coalesce(to_unix_timestamp(\n\n    coalesce(to_timestamp(\nmax(cast(run_completed_at as timestamp))\n), nvl2(to_timestamp(\nmax(cast(run_completed_at as timestamp))\n), assert_true(to_timestamp(\nmax(cast(run_completed_at as timestamp))\n) is not null), null))\n\n), nvl2(to_unix_timestamp(\n\n    coalesce(to_timestamp(\nmax(cast(run_completed_at as timestamp))\n), nvl2(to_timestamp(\nmax(cast(run_completed_at as timestamp))\n), assert_true(to_timestamp(\nmax(cast(run_completed_at as timestamp))\n) is not null), null))\n\n), assert_true(to_unix_timestamp(\n\n    coalesce(to_timestamp(\nmax(cast(run_completed_at as timestamp))\n), nvl2(to_timestamp(\nmax(cast(run_completed_at as timestamp))\n), assert_true(to_timestamp(\nmax(cast(run_completed_at as timestamp))\n) is not null), null))\n\n) is not null), null))\n\n\n                - \n\n    coalesce(to_unix_timestamp(\n\n    coalesce(to_timestamp(\nmin(cast(run_started_at as timestamp))\n), nvl2(to_timestamp(\nmin(cast(run_started_at as timestamp))\n), assert_true(to_timestamp(\nmin(cast(run_started_at as timestamp))\n) is not null), null))\n\n), nvl2(to_unix_timestamp(\n\n    coalesce(to_timestamp(\nmin(cast(run_started_at as timestamp))\n), nvl2(to_timestamp(\nmin(cast(run_started_at as timestamp))\n), assert_true(to_timestamp(\nmin(cast(run_started_at as timestamp))\n) is not null), null))\n\n), assert_true(to_unix_timestamp(\n\n    coalesce(to_timestamp(\nmin(cast(run_started_at as timestamp))\n), nvl2(to_timestamp(\nmin(cast(run_started_at as timestamp))\n), assert_true(to_timestamp(\nmin(cast(run_started_at as timestamp))\n) is not null), null))\n\n) is not null), null))\n\n\n            ) / 1)\n            end\n\n            \n\n            \n as job_run_execution_time\n  from integration_dp.dbt_invocations\n  where job_id is not null\n  group by job_name, job_id, job_run_id\n)\n\nselect\n  job_name as name,\n  job_id as id,\n  job_run_id as run_id,\n  job_run_started_at as run_started_at,\n  job_run_completed_at as run_completed_at,\n  job_run_execution_time as run_execution_time\nfrom jobs", "relation_name": "integration_dp.job_run_results"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:55.296286Z", "completed_at": "2024-06-19T07:40:55.692875Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:55.783420Z", "completed_at": "2024-06-19T07:40:55.783445Z"}], "thread_id": "Thread-3", "execution_time": 0.5227417945861816, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.model_run_results", "compiled": true, "compiled_code": "\n\nwith dbt_run_results as (\n    select * from integration_dp.dbt_run_results\n),\n\ndbt_models as (\n    select * from integration_dp.dbt_models\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    models.database_name,\n    models.schema_name,\n    coalesce(run_results.materialization, models.materialization) as materialization,\n    models.tags,\n    models.package_name,\n    models.path,\n    models.original_path,\n    models.owner,\n    models.alias,\n    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,\n    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY \n    date_trunc('day', cast(run_results.generated_at as timestamp))\n ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id\n              THEN TRUE\n              ELSE FALSE \n         END                                                               AS is_the_first_invocation_of_the_day,\n    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY \n    date_trunc('day', cast(run_results.generated_at as timestamp))\n ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id\n              THEN TRUE\n              ELSE FALSE \n         END                                                               AS is_the_last_invocation_of_the_day\n    \nFROM dbt_run_results run_results\nJOIN dbt_models models ON run_results.unique_id = models.unique_id", "relation_name": "integration_dp.model_run_results"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:56.287836Z", "completed_at": "2024-06-19T07:40:56.430129Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:56.440866Z", "completed_at": "2024-06-19T07:40:56.440888Z"}], "thread_id": "Thread-3", "execution_time": 0.5655360221862793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.snapshot_run_results", "compiled": true, "compiled_code": "\n\nwith dbt_run_results as (\n    select * from integration_dp.dbt_run_results\n),\n\ndbt_snapshots as (\n    select * from integration_dp.dbt_snapshots\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    snapshots.database_name,\n    snapshots.schema_name,\n    coalesce(run_results.materialization, snapshots.materialization) as materialization,\n    snapshots.tags,\n    snapshots.package_name,\n    snapshots.path,\n    snapshots.original_path,\n    snapshots.owner,\n    snapshots.alias\nFROM dbt_run_results run_results\nJOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id", "relation_name": "integration_dp.snapshot_run_results"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:56.927011Z", "completed_at": "2024-06-19T07:40:56.999620Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:57.005285Z", "completed_at": "2024-06-19T07:40:57.005305Z"}], "thread_id": "Thread-3", "execution_time": 0.5483474731445312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_dbt_source_freshness", "compiled": true, "compiled_code": "\n\nwith results as (\n  select * from integration_dp.dbt_source_freshness_results\n),\n\nsources as (\n  select * from integration_dp.dbt_sources\n)\n\nselect\n  results.source_freshness_execution_id as alert_id,\n  results.max_loaded_at,\n  results.snapshotted_at,\n  cast(results.generated_at as timestamp) as detected_at,\n  results.max_loaded_at_time_ago_in_s,\n  results.status,\n  results.error,\n  results.warn_after,\n  results.error_after,\n  results.filter,\n  sources.unique_id,\n  sources.database_name,\n  sources.schema_name,\n  sources.source_name,\n  sources.identifier,\n  sources.tags,\n  sources.meta,\n  sources.owner,\n  sources.package_name,\n  sources.path,\n  -- These columns below are deprecated. We add them since this view\n  -- was used to be loaded into an incremental model with those columns, their names were later changed\n  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -\n  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge\n  results.error_after as freshness_error_after,\n  results.warn_after as freshness_warn_after,\n  results.filter as freshness_filter\nfrom results\njoin sources on results.unique_id = sources.unique_id\nwhere True and lower(status) != 'pass'", "relation_name": "integration_dp.alerts_dbt_source_freshness"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:57.017176Z", "completed_at": "2024-06-19T07:40:57.056010Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:57.059376Z", "completed_at": "2024-06-19T07:40:57.059397Z"}], "thread_id": "Thread-3", "execution_time": 0.05111336708068848, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_artifacts_hashes", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n  'dbt_models' as artifacts_model,\n   metadata_hash\nfrom integration_dp.dbt_models\n union all \n\nselect\n  'dbt_tests' as artifacts_model,\n   metadata_hash\nfrom integration_dp.dbt_tests\n union all \n\nselect\n  'dbt_sources' as artifacts_model,\n   metadata_hash\nfrom integration_dp.dbt_sources\n union all \n\nselect\n  'dbt_snapshots' as artifacts_model,\n   metadata_hash\nfrom integration_dp.dbt_snapshots\n union all \n\nselect\n  'dbt_metrics' as artifacts_model,\n   metadata_hash\nfrom integration_dp.dbt_metrics\n union all \n\nselect\n  'dbt_exposures' as artifacts_model,\n   metadata_hash\nfrom integration_dp.dbt_exposures\n union all \n\nselect\n  'dbt_seeds' as artifacts_model,\n   metadata_hash\nfrom integration_dp.dbt_seeds\n union all \n\nselect\n  'dbt_columns' as artifacts_model,\n   metadata_hash\nfrom integration_dp.dbt_columns\n\n\norder by metadata_hash", "relation_name": "integration_dp.dbt_artifacts_hashes"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:57.071198Z", "completed_at": "2024-06-19T07:40:57.560817Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:57.566486Z", "completed_at": "2024-06-19T07:40:57.566514Z"}], "thread_id": "Thread-3", "execution_time": 0.5018303394317627, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_anomaly_detection", "compiled": true, "compiled_code": "\n\nwith elementary_test_results as (\n    select * from integration_dp.elementary_test_results\n),\n\nalerts_anomaly_detection as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'\n)\n\nselect * from alerts_anomaly_detection", "relation_name": "integration_dp.alerts_anomaly_detection"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:57.577802Z", "completed_at": "2024-06-19T07:40:57.604281Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:57.608123Z", "completed_at": "2024-06-19T07:40:57.608145Z"}], "thread_id": "Thread-3", "execution_time": 0.036180734634399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_dbt_tests", "compiled": true, "compiled_code": "\n\nwith elementary_test_results as (\n    select * from integration_dp.elementary_test_results\n),\n\nalerts_dbt_tests as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'\n)\n\nselect * from alerts_dbt_tests", "relation_name": "integration_dp.alerts_dbt_tests"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:57.621525Z", "completed_at": "2024-06-19T07:40:57.651378Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:57.656116Z", "completed_at": "2024-06-19T07:40:57.656142Z"}], "thread_id": "Thread-3", "execution_time": 0.044078826904296875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_schema_changes", "compiled": true, "compiled_code": "\n\n\nwith elementary_test_results as (\n    select * from integration_dp.elementary_test_results\n),\n\nalerts_schema_changes as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'\n)\n\nselect * from alerts_schema_changes", "relation_name": "integration_dp.alerts_schema_changes"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:58.596643Z", "completed_at": "2024-06-19T07:40:58.627393Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:58.631180Z", "completed_at": "2024-06-19T07:40:58.631204Z"}], "thread_id": "Thread-3", "execution_time": 0.04121208190917969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.test_result_rows", "compiled": true, "compiled_code": "-- indexes are not supported in all warehouses, relevant to postgres only\n\n\n-- depends_on: integration_dp.elementary_test_results\nselect * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as string) as elementary_test_results_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as result_row\n\n,\n                cast('2091-02-17' as timestamp) as detected_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "integration_dp.test_result_rows"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:58.642953Z", "completed_at": "2024-06-19T07:40:58.671498Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:58.675214Z", "completed_at": "2024-06-19T07:40:58.675240Z"}], "thread_id": "Thread-3", "execution_time": 0.03938746452331543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.not_null_hub_account_dv_hkey_hub_account.23f1e13ab0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect dv_hkey_hub_account\nfrom integration_dp.hub_account\nwhere dv_hkey_hub_account is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:58.688098Z", "completed_at": "2024-06-19T07:40:58.725061Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:59.070708Z", "completed_at": "2024-06-19T07:40:59.070738Z"}], "thread_id": "Thread-3", "execution_time": 0.39020562171936035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.unique_hub_account_dv_hkey_hub_account.0e960da32d", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    dv_hkey_hub_account as unique_field,\n    count(*) as n_records\n\nfrom integration_dp.hub_account\nwhere dv_hkey_hub_account is not null\ngroup by dv_hkey_hub_account\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:59.079981Z", "completed_at": "2024-06-19T07:40:59.097132Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:59.100369Z", "completed_at": "2024-06-19T07:40:59.100390Z"}], "thread_id": "Thread-3", "execution_time": 0.02585911750793457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.not_null_hub_branch_dv_hkey_hub_branch.85dbc0a24b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect dv_hkey_hub_branch\nfrom integration_dp.hub_branch\nwhere dv_hkey_hub_branch is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:59.110311Z", "completed_at": "2024-06-19T07:40:59.161851Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:59.167989Z", "completed_at": "2024-06-19T07:40:59.168015Z"}], "thread_id": "Thread-3", "execution_time": 0.07450699806213379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.unique_hub_branch_dv_hkey_hub_branch.821972bc70", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    dv_hkey_hub_branch as unique_field,\n    count(*) as n_records\n\nfrom integration_dp.hub_branch\nwhere dv_hkey_hub_branch is not null\ngroup by dv_hkey_hub_branch\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:59.188974Z", "completed_at": "2024-06-19T07:40:59.207153Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:59.210324Z", "completed_at": "2024-06-19T07:40:59.210344Z"}], "thread_id": "Thread-3", "execution_time": 0.02727198600769043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.not_null_hub_customer_dv_hkey_hub_customer.a78025d9fa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect dv_hkey_hub_customer\nfrom integration_dp.hub_customer\nwhere dv_hkey_hub_customer is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:59.220860Z", "completed_at": "2024-06-19T07:40:59.907871Z"}, {"name": "execute", "started_at": "2024-06-19T07:40:59.911757Z", "completed_at": "2024-06-19T07:40:59.911786Z"}], "thread_id": "Thread-3", "execution_time": 0.6971197128295898, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.unique_hub_customer_dv_hkey_hub_customer.3c38804e59", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    dv_hkey_hub_customer as unique_field,\n    count(*) as n_records\n\nfrom integration_dp.hub_customer\nwhere dv_hkey_hub_customer is not null\ngroup by dv_hkey_hub_customer\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:40:59.923717Z", "completed_at": "2024-06-19T07:41:00.323854Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:00.328785Z", "completed_at": "2024-06-19T07:41:00.328806Z"}], "thread_id": "Thread-3", "execution_time": 0.41547536849975586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.not_null_lnk_customer_account_dv_hkey_lnk_customer_account.3753147ffa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect dv_hkey_lnk_customer_account\nfrom integration_dp.lnk_customer_account\nwhere dv_hkey_lnk_customer_account is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:00.349020Z", "completed_at": "2024-06-19T07:41:00.382233Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:00.386131Z", "completed_at": "2024-06-19T07:41:00.386163Z"}], "thread_id": "Thread-3", "execution_time": 0.04627084732055664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.relationships_lnk_customer_account_dv_hkey_hub_account__dv_hkey_hub_account__ref_hub_account_.88a686db76", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select dv_hkey_hub_account as from_field\n    from integration_dp.lnk_customer_account\n    where dv_hkey_hub_account is not null\n),\n\nparent as (\n    select dv_hkey_hub_account as to_field\n    from integration_dp.hub_account\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:00.425646Z", "completed_at": "2024-06-19T07:41:00.981675Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:00.987931Z", "completed_at": "2024-06-19T07:41:00.988950Z"}], "thread_id": "Thread-3", "execution_time": 0.5742397308349609, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.relationships_lnk_customer_account_dv_hkey_hub_customer__dv_hkey_hub_customer__ref_hub_customer_.1c1a9b5a36", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select dv_hkey_hub_customer as from_field\n    from integration_dp.lnk_customer_account\n    where dv_hkey_hub_customer is not null\n),\n\nparent as (\n    select dv_hkey_hub_customer as to_field\n    from integration_dp.hub_customer\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:01.006997Z", "completed_at": "2024-06-19T07:41:01.034827Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:01.039982Z", "completed_at": "2024-06-19T07:41:01.040027Z"}], "thread_id": "Thread-3", "execution_time": 0.0441746711730957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.unique_lnk_customer_account_dv_hkey_lnk_customer_account.a898dd33a4", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    dv_hkey_lnk_customer_account as unique_field,\n    count(*) as n_records\n\nfrom integration_dp.lnk_customer_account\nwhere dv_hkey_lnk_customer_account is not null\ngroup by dv_hkey_lnk_customer_account\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:01.560180Z", "completed_at": "2024-06-19T07:41:02.112616Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:02.116441Z", "completed_at": "2024-06-19T07:41:02.116464Z"}], "thread_id": "Thread-3", "execution_time": 1.0694098472595215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ktl_dbt.lsat_customer_account", "compiled": true, "compiled_code": "-- depends_on: integration_dp.lsat_der_customer_account\n    with\n        cte_lsat_der_latest_records as (\n            select *\n            from\n                (\n                    select\n                        *,\n\n                        row_number() over (\n                            partition by\n                                dv_hkey_lnk_customer_account\n                                \n                            order by\n                                dv_src_ldt desc,dv_kaf_ldt desc,dv_kaf_ofs desc\n                        ) as row_num\n\n                    from integration_dp.lsat_der_customer_account\n                    where\n                        1 = 1\n                        and dv_src_ldt < date'2024-06-19'\n                )\n            where row_num = 1\n        ),\n\n        cte_lsat_latest_records as (\n            select *\n            from\n                (\n                    select\n                        *,\n\n                        row_number() over (\n                            partition by\n                                dv_hkey_lnk_customer_account\n                                \n                            order by\n                                dv_src_ldt desc,dv_kaf_ldt desc,dv_kaf_ofs desc\n                        ) as row_num\n\n                    from integration_dp.lsat_customer_account\n                )\n            where row_num = 1\n        )\n\n    select\n        dv_hkey_lsat_customer_account,\n        dv_hkey_lnk_customer_account,\n        dv_hsh_dif,\n\n        \n\n        br_cd,\n        book_date,\n        value_date,\n        maturity_date,\n        amt_financed,\n        close_date,\n        account_status,\n        sub_cd,\n        ten_sp_ksp,\n        ccy_cd,\n        product_code,\n        \n\n        dv_kaf_ldt,\n        dv_kaf_ofs,\n        dv_cdc_ops,\n        dv_src_ldt,\n        dv_src_rec,\n        dv_ldt\n        \n\n    from cte_lsat_der_latest_records lsat_der\n    where\n        not exists (\n            select 1\n            from cte_lsat_latest_records lsat\n            where\n                lsat_der.dv_hkey_lnk_customer_account = lsat.dv_hkey_lnk_customer_account\n\n                \n\n                and lsat_der.dv_hsh_dif = lsat.dv_hsh_dif\n                and lower(lsat_der.dv_cdc_ops) not in ('d', 't')\n                and lower(lsat.dv_cdc_ops) not in ('d', 't')\n        )", "relation_name": "integration_dp.lsat_customer_account"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:02.138810Z", "completed_at": "2024-06-19T07:41:02.685798Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:02.693400Z", "completed_at": "2024-06-19T07:41:02.693426Z"}], "thread_id": "Thread-3", "execution_time": 0.5644617080688477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ktl_dbt.lsat_snp_customer_account", "compiled": true, "compiled_code": "-- depends_on: integration_dp.lsat_der_customer_account\n    with\n        cte_lsat_der_latest_records as (\n            select *\n            from\n                (\n                    select\n                        *,\n\n                        row_number() over (\n                            partition by\n                                dv_hkey_lnk_customer_account\n                                \n                            order by\n                                dv_src_ldt desc,dv_kaf_ldt desc,dv_kaf_ofs desc\n                        ) as row_num\n\n                    from integration_dp.lsat_der_customer_account\n                    where\n                        1 = 1\n                        and dv_src_ldt < date'2024-06-19'\n                )\n            where row_num = 1\n        ),\n\n        cte_lsat_snp_latest_records as (\n            select *\n            from\n                (\n                    select\n                        *,\n\n                        row_number() over (\n                            partition by\n                                dv_hkey_lnk_customer_account\n                                \n                            order by\n                                dv_src_ldt desc,dv_kaf_ldt desc,dv_kaf_ofs desc\n                        ) as row_num\n\n                    from integration_dp.lsat_snp_customer_account\n                )\n            where row_num = 1\n        )\n\n    select\n        dv_hkey_lsat_customer_account,\n        dv_hkey_lnk_customer_account,\n        dv_hsh_dif,\n\n        \n\n        br_cd,\n        book_date,\n        value_date,\n        maturity_date,\n        amt_financed,\n        close_date,\n        account_status,\n        sub_cd,\n        ten_sp_ksp,\n        ccy_cd,\n        product_code,\n        \n\n        dv_kaf_ldt,\n        dv_kaf_ofs,\n        dv_cdc_ops,\n        dv_src_ldt,\n        dv_src_rec,\n        dv_ldt\n        \n\n    from cte_lsat_der_latest_records lsat_der\n    where\n        not exists (\n            select 1\n            from cte_lsat_snp_latest_records lsat_snp\n            where\n                lsat_der.dv_hkey_lnk_customer_account = lsat_snp.dv_hkey_lnk_customer_account\n\n                \n\n                and lsat_der.dv_hsh_dif = lsat_snp.dv_hsh_dif\n                and lower(lsat_der.dv_cdc_ops) not in ('d', 't')\n                and lower(lsat_snp.dv_cdc_ops) not in ('d', 't')\n        )", "relation_name": "integration_dp.lsat_snp_customer_account"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:02.710851Z", "completed_at": "2024-06-19T07:41:02.777238Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:02.783914Z", "completed_at": "2024-06-19T07:41:02.783977Z"}], "thread_id": "Thread-3", "execution_time": 0.10251712799072266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.not_null_lsat_der_customer_account_dv_hkey_lnk_customer_account.ebe6a414a3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect dv_hkey_lnk_customer_account\nfrom integration_dp.lsat_der_customer_account\nwhere dv_hkey_lnk_customer_account is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:03.304962Z", "completed_at": "2024-06-19T07:41:03.368374Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:03.378020Z", "completed_at": "2024-06-19T07:41:03.378047Z"}], "thread_id": "Thread-3", "execution_time": 0.5512595176696777, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.not_null_lsat_der_customer_account_dv_hkey_lsat_customer_account.9746de0b5c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect dv_hkey_lsat_customer_account\nfrom integration_dp.lsat_der_customer_account\nwhere dv_hkey_lsat_customer_account is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:03.405092Z", "completed_at": "2024-06-19T07:41:04.814396Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:04.821001Z", "completed_at": "2024-06-19T07:41:04.821034Z"}], "thread_id": "Thread-3", "execution_time": 1.4312679767608643, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.relationships_lsat_der_customer_account_dv_hkey_lnk_customer_account__dv_hkey_lnk_customer_account__ref_lnk_customer_account_.96c04ad6e0", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select dv_hkey_lnk_customer_account as from_field\n    from integration_dp.lsat_der_customer_account\n    where dv_hkey_lnk_customer_account is not null\n),\n\nparent as (\n    select dv_hkey_lnk_customer_account as to_field\n    from integration_dp.lnk_customer_account\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:04.837480Z", "completed_at": "2024-06-19T07:41:04.859513Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:04.864674Z", "completed_at": "2024-06-19T07:41:04.864720Z"}], "thread_id": "Thread-3", "execution_time": 0.03602433204650879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.unique_lsat_der_customer_account_dv_hkey_lsat_customer_account.d4673fd246", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    dv_hkey_lsat_customer_account as unique_field,\n    count(*) as n_records\n\nfrom integration_dp.lsat_der_customer_account\nwhere dv_hkey_lsat_customer_account is not null\ngroup by dv_hkey_lsat_customer_account\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:04.878021Z", "completed_at": "2024-06-19T07:41:04.895997Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:04.901066Z", "completed_at": "2024-06-19T07:41:04.901089Z"}], "thread_id": "Thread-3", "execution_time": 0.0328366756439209, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ktl_dbt.dim_account", "compiled": true, "compiled_code": "with\n    cte_rnk as (\n        select\n            *,\n            row_number() over (\n                partition by dv_hkey_hub_account, dv_src_ldt order by dv_ldt\n            ) rnk\n        from integration_dp.sat_der_account\n        where 1 = 1\n    ),\n    cte_latest_rnk1 as (select * from cte_rnk where rnk = 1),\n    cte_new_hsh_dif as (\n        select\n            *,\n            lag(dv_hsh_dif) over (\n                partition by dv_hkey_hub_account order by dv_src_ldt\n            ) prev_dv_hsh_dif\n        from cte_latest_rnk1\n    ),\n    cte_dim_account as (\n        select\n            hub.dv_hkey_hub_account sk_account,\n            hub.ln_ac_nbr,\n            maturity_date,\n            amt_financed,\n            sat.dv_src_ldt as dv_start_date,\n            lead(sat.dv_src_ldt, 1, date '9999-12-31') over (\n                partition by sat.dv_hkey_hub_account order by sat.dv_src_ldt\n            ) dv_end_date,\n            sat.dv_ldt\n        from cte_new_hsh_dif sat\n        left join\n            integration_dp.hub_account hub\n            on hub.dv_hkey_hub_account = sat.dv_hkey_hub_account\n        where\n            1 = 1\n            and (prev_dv_hsh_dif <> dv_hsh_dif or prev_dv_hsh_dif is null)\n            and sat.dv_cdc_ops <> 'D'\n    )\n    select * from cte_dim_account", "relation_name": "integration_dp.dim_account"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:04.918017Z", "completed_at": "2024-06-19T07:41:05.451747Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:05.492725Z", "completed_at": "2024-06-19T07:41:05.492749Z"}], "thread_id": "Thread-3", "execution_time": 0.5815286636352539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ktl_dbt.sat_account", "compiled": true, "compiled_code": "-- depends_on: integration_dp.sat_der_account\n    with\n        cte_sat_der_latest_records as (\n            select *\n            from\n                (\n                    select\n                        *,\n\n                        row_number() over (\n                            partition by\n                                dv_hkey_hub_account\n                                \n                            order by\n                                dv_src_ldt desc,dv_kaf_ldt desc,dv_kaf_ofs desc\n                        ) as row_num\n\n                    from integration_dp.sat_der_account\n                    where\n                        1 = 1\n                        and dv_src_ldt < date'2024-06-19'\n                )\n            where row_num = 1\n        ),\n\n        cte_sat_latest_records as (\n            select *\n            from\n                (\n                    select\n                        *,\n\n                        row_number() over (\n                            partition by\n                                dv_hkey_hub_account\n                                \n                            order by\n                                dv_src_ldt desc,dv_kaf_ldt desc,dv_kaf_ofs desc\n                        ) as row_num\n\n                    from integration_dp.sat_account\n                )\n            where row_num = 1\n        )\n\n    select\n        dv_hkey_sat_account,\n        dv_hkey_hub_account,\n        dv_hsh_dif,\n\n        \n\n        br_cd,\n        book_date,\n        value_date,\n        maturity_date,\n        cst_no,\n        amt_financed,\n        close_date,\n        account_status,\n        sub_cd,\n        ten_sp_ksp,\n        ccy_cd,\n        product_code,\n        \n\n        dv_kaf_ldt,\n        dv_kaf_ofs,\n        dv_cdc_ops,\n        dv_src_ldt,\n        dv_src_rec,\n        dv_ldt\n        \n\n    from cte_sat_der_latest_records sat_der\n    where\n        not exists (\n            select 1\n            from cte_sat_latest_records sat\n            where\n                sat_der.dv_hkey_hub_account = sat.dv_hkey_hub_account\n\n                \n\n                and sat_der.dv_hsh_dif = sat.dv_hsh_dif\n                and lower(sat_der.dv_cdc_ops) not in ('d', 't')\n                and lower(sat.dv_cdc_ops) not in ('d', 't')\n        )", "relation_name": "integration_dp.sat_account"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:05.507007Z", "completed_at": "2024-06-19T07:41:05.565648Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:05.569711Z", "completed_at": "2024-06-19T07:41:05.569736Z"}], "thread_id": "Thread-3", "execution_time": 0.0735025405883789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ktl_dbt.sat_snp_account", "compiled": true, "compiled_code": "-- depends_on: integration_dp.sat_der_account\n    with\n        cte_sat_der_latest_records as (\n            select *\n            from\n                (\n                    select\n                        *,\n\n                        row_number() over (\n                            partition by\n                                dv_hkey_hub_account\n                                \n                            order by\n                                dv_src_ldt desc,dv_kaf_ldt desc,dv_kaf_ofs desc\n                        ) as row_num\n\n                    from integration_dp.sat_der_account\n                    where\n                        1 = 1\n                        and dv_src_ldt < date'2024-06-19'\n                )\n            where row_num = 1\n        ),\n\n        cte_sat_snp_latest_records as (\n            select *\n            from\n                (\n                    select\n                        *,\n\n                        row_number() over (\n                            partition by\n                                dv_hkey_hub_account\n                                \n                            order by\n                                dv_src_ldt desc,dv_kaf_ldt desc,dv_kaf_ofs desc\n                        ) as row_num\n\n                    from integration_dp.sat_snp_account\n                )\n            where row_num = 1\n        )\n\n    select\n        dv_hkey_sat_account,\n        dv_hkey_hub_account,\n        dv_hsh_dif,\n\n        \n\n        br_cd,\n        book_date,\n        value_date,\n        maturity_date,\n        cst_no,\n        amt_financed,\n        close_date,\n        account_status,\n        sub_cd,\n        ten_sp_ksp,\n        ccy_cd,\n        product_code,\n        \n\n        dv_kaf_ldt,\n        dv_kaf_ofs,\n        dv_cdc_ops,\n        dv_src_ldt,\n        dv_src_rec,\n        dv_ldt\n        \n\n    from cte_sat_der_latest_records sat_der\n    where\n        not exists (\n            select 1\n            from cte_sat_snp_latest_records sat_snp\n            where\n                sat_der.dv_hkey_hub_account = sat_snp.dv_hkey_hub_account\n\n                \n\n                and sat_der.dv_hsh_dif = sat_snp.dv_hsh_dif\n                and lower(sat_der.dv_cdc_ops) not in ('d', 't')\n                and lower(sat_snp.dv_cdc_ops) not in ('d', 't')\n        )", "relation_name": "integration_dp.sat_snp_account"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:05.581017Z", "completed_at": "2024-06-19T07:41:05.599786Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:05.603045Z", "completed_at": "2024-06-19T07:41:05.603075Z"}], "thread_id": "Thread-3", "execution_time": 0.02856588363647461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.not_null_sat_der_account_dv_hkey_sat_account.689df0b6e4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect dv_hkey_sat_account\nfrom integration_dp.sat_der_account\nwhere dv_hkey_sat_account is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:05.614023Z", "completed_at": "2024-06-19T07:41:05.650872Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:05.654956Z", "completed_at": "2024-06-19T07:41:05.654988Z"}], "thread_id": "Thread-3", "execution_time": 0.050598859786987305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.relationships_sat_der_account_dv_hkey_hub_account__dv_hkey_hub_account__ref_hub_account_.8b0be48a94", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select dv_hkey_hub_account as from_field\n    from integration_dp.sat_der_account\n    where dv_hkey_hub_account is not null\n),\n\nparent as (\n    select dv_hkey_hub_account as to_field\n    from integration_dp.hub_account\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:05.673343Z", "completed_at": "2024-06-19T07:41:05.691569Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:06.065711Z", "completed_at": "2024-06-19T07:41:06.065748Z"}], "thread_id": "Thread-3", "execution_time": 0.40520572662353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.unique_sat_der_account_dv_hkey_sat_account.bb8e914f71", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    dv_hkey_sat_account as unique_field,\n    count(*) as n_records\n\nfrom integration_dp.sat_der_account\nwhere dv_hkey_sat_account is not null\ngroup by dv_hkey_sat_account\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:06.088408Z", "completed_at": "2024-06-19T07:41:06.133832Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:06.155095Z", "completed_at": "2024-06-19T07:41:06.155127Z"}], "thread_id": "Thread-3", "execution_time": 0.07949423789978027, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ktl_dbt.dim_customer_corebank", "compiled": true, "compiled_code": "with\n    cte_rnk as (\n        select\n            *,\n            row_number() over (\n                partition by dv_hkey_hub_customer, dv_src_ldt order by dv_ldt\n            ) rnk\n        from integration_dp.sat_der_customer\n        where 1 = 1\n    ),\n    cte_latest_rnk1 as (select * from cte_rnk where rnk = 1),\n    cte_new_hsh_dif as (\n        select\n            *,\n            lag(dv_hsh_dif) over (\n                partition by dv_hkey_hub_customer order by dv_src_ldt\n            ) prev_dv_hsh_dif\n        from cte_latest_rnk1\n    ),\n    cte_dim_customer_corebank as (\n        select\n            hub.dv_hkey_hub_customer as sk_customer,\n            hub.cst_no,\n            cst_nm,\n            cst_full_nm,\n            cst_type,\n            br_cd,\n            addr_pri,\n            address_line4,\n            address_line3,\n            create_dt,\n            record_stat,\n            sex,\n            id_number,\n            type_of_id,\n            date_of_issue,\n            place_of_issue,\n            phone,\n            birth_day,\n            income_levcd,\n            educ_levcd,\n            mail_typcd,\n            occptn_cd,\n            sat.dv_src_ldt as dv_start_date,\n            lead(sat.dv_src_ldt, 1, date '9999-12-31') over (\n                partition by sat.dv_hkey_hub_customer order by sat.dv_src_ldt\n            ) dv_end_date,\n            sat.dv_ldt\n        from cte_new_hsh_dif sat\n        left join\n            integration_dp.hub_customer hub\n            on hub.dv_hkey_hub_customer = sat.dv_hkey_hub_customer\n        where\n            1 = 1\n            and (prev_dv_hsh_dif <> dv_hsh_dif or prev_dv_hsh_dif is null)\n            and sat.dv_cdc_ops <> 'D'\n    ),\n    cte_final as (\n        select\n            dv_ldt as dv_ldt,\n            current_timestamp() as cob_date,\n            cst_no as cn_ma_kh,\n            cst_full_nm as cn_ho_ten_kh,\n            case when sex = 'M' then 'ong' else 'ba' end as cn_danh_xung,\n            cast(null as string) cn_biet_danh,\n            sex as cn_gioi_tinh,\n            'Kinh' as cn_dan_toc,\n            birth_day as cn_ngay_sinh,\n            addr_pri as cn_cu_tru,\n            cast(null as string) cn_dc_thuongtru,\n            cast(null as string) cn_dc_tamtru,\n            'Vietnam' as cn_quoc_tich,\n            phone as cn_sdt_dd,\n            cast(null as string) cn_email,\n            case when type_of_id = 'CMND' then id_number end as cn_so_cmnd,\n            case when type_of_id = 'CMND' then date_of_issue end as cn_ngaycap_cmnd,\n            case when type_of_id = 'CMND' then place_of_issue end as cn_noicap_cmnd,\n            case when type_of_id = 'CCCD' then id_number end as cn_so_cccd,\n            case when type_of_id = 'CCCD' then date_of_issue end as cn_ngaycap_cccd,\n            case when type_of_id = 'CCCD' then date_of_issue end as cn_noicap_cccd,\n            cast(null as string) cn_so_pp,\n            cast(null as string) cn_ngaycap_pp,\n            cast(null as string) cn_noicap_pp,\n            cast(null as string) cn_so_mst,\n            cast(null as string) cn_ngaycap_mst,\n            cast(null as string) cn_noicap_mst,\n            educ_levcd as cn_hoc_van,\n            occptn_cd as cn_nghenghiep,\n            cast(null as string) cn_tt_sohuunha,\n            cast(null as string) cn_so_npt,\n            cast(null as string) cn_hon_nhan,\n            cast(null as string) cn_nguon_tn,\n            cast(null as string) cn_so_tn,\n            cast(null as string) cn_so_tn_cdt,\n            create_dt as cn_ngaymo\n        from cte_dim_customer_corebank\n    )\nselect *\nfrom cte_final", "relation_name": "integration_dp.dim_customer_corebank"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:06.166869Z", "completed_at": "2024-06-19T07:41:06.223805Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:06.228133Z", "completed_at": "2024-06-19T07:41:06.228155Z"}], "thread_id": "Thread-3", "execution_time": 0.06704378128051758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ktl_dbt.sat_customer", "compiled": true, "compiled_code": "-- depends_on: integration_dp.sat_der_customer\n    with\n        cte_sat_der_latest_records as (\n            select *\n            from\n                (\n                    select\n                        *,\n\n                        row_number() over (\n                            partition by\n                                dv_hkey_hub_customer\n                                \n                            order by\n                                dv_src_ldt desc,dv_kaf_ldt desc,dv_kaf_ofs desc\n                        ) as row_num\n\n                    from integration_dp.sat_der_customer\n                    where\n                        1 = 1\n                        and dv_src_ldt < date'2024-06-19'\n                )\n            where row_num = 1\n        ),\n\n        cte_sat_latest_records as (\n            select *\n            from\n                (\n                    select\n                        *,\n\n                        row_number() over (\n                            partition by\n                                dv_hkey_hub_customer\n                                \n                            order by\n                                dv_src_ldt desc,dv_kaf_ldt desc,dv_kaf_ofs desc\n                        ) as row_num\n\n                    from integration_dp.sat_customer\n                )\n            where row_num = 1\n        )\n\n    select\n        dv_hkey_sat_customer,\n        dv_hkey_hub_customer,\n        dv_hsh_dif,\n\n        \n\n        cst_nm,\n        cst_full_nm,\n        cst_type,\n        br_cd,\n        addr_pri,\n        address_line4,\n        address_line3,\n        create_dt,\n        record_stat,\n        sex,\n        id_number,\n        type_of_id,\n        date_of_issue,\n        place_of_issue,\n        phone,\n        birth_day,\n        income_levcd,\n        educ_levcd,\n        mail_typcd,\n        occptn_cd,\n        \n\n        dv_kaf_ldt,\n        dv_kaf_ofs,\n        dv_cdc_ops,\n        dv_src_ldt,\n        dv_src_rec,\n        dv_ldt\n        \n\n    from cte_sat_der_latest_records sat_der\n    where\n        not exists (\n            select 1\n            from cte_sat_latest_records sat\n            where\n                sat_der.dv_hkey_hub_customer = sat.dv_hkey_hub_customer\n\n                \n\n                and sat_der.dv_hsh_dif = sat.dv_hsh_dif\n                and lower(sat_der.dv_cdc_ops) not in ('d', 't')\n                and lower(sat.dv_cdc_ops) not in ('d', 't')\n        )", "relation_name": "integration_dp.sat_customer"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:06.758718Z", "completed_at": "2024-06-19T07:41:06.861524Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:06.865346Z", "completed_at": "2024-06-19T07:41:06.865367Z"}], "thread_id": "Thread-3", "execution_time": 0.6338632106781006, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ktl_dbt.sat_snp_customer", "compiled": true, "compiled_code": "-- depends_on: integration_dp.sat_der_customer\n    with\n        cte_sat_der_latest_records as (\n            select *\n            from\n                (\n                    select\n                        *,\n\n                        row_number() over (\n                            partition by\n                                dv_hkey_hub_customer\n                                \n                            order by\n                                dv_src_ldt desc,dv_kaf_ldt desc,dv_kaf_ofs desc\n                        ) as row_num\n\n                    from integration_dp.sat_der_customer\n                    where\n                        1 = 1\n                        and dv_src_ldt < date'2024-06-19'\n                )\n            where row_num = 1\n        ),\n\n        cte_sat_snp_latest_records as (\n            select *\n            from\n                (\n                    select\n                        *,\n\n                        row_number() over (\n                            partition by\n                                dv_hkey_hub_customer\n                                \n                            order by\n                                dv_src_ldt desc,dv_kaf_ldt desc,dv_kaf_ofs desc\n                        ) as row_num\n\n                    from integration_dp.sat_snp_customer\n                )\n            where row_num = 1\n        )\n\n    select\n        dv_hkey_sat_customer,\n        dv_hkey_hub_customer,\n        dv_hsh_dif,\n\n        \n\n        cst_nm,\n        cst_full_nm,\n        cst_type,\n        br_cd,\n        addr_pri,\n        address_line4,\n        address_line3,\n        create_dt,\n        record_stat,\n        sex,\n        id_number,\n        type_of_id,\n        date_of_issue,\n        place_of_issue,\n        phone,\n        birth_day,\n        income_levcd,\n        educ_levcd,\n        mail_typcd,\n        occptn_cd,\n        \n\n        dv_kaf_ldt,\n        dv_kaf_ofs,\n        dv_cdc_ops,\n        dv_src_ldt,\n        dv_src_rec,\n        dv_ldt\n        \n\n    from cte_sat_der_latest_records sat_der\n    where\n        not exists (\n            select 1\n            from cte_sat_snp_latest_records sat_snp\n            where\n                sat_der.dv_hkey_hub_customer = sat_snp.dv_hkey_hub_customer\n\n                \n\n                and sat_der.dv_hsh_dif = sat_snp.dv_hsh_dif\n                and lower(sat_der.dv_cdc_ops) not in ('d', 't')\n                and lower(sat_snp.dv_cdc_ops) not in ('d', 't')\n        )", "relation_name": "integration_dp.sat_snp_customer"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:06.877367Z", "completed_at": "2024-06-19T07:41:06.905018Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:06.908752Z", "completed_at": "2024-06-19T07:41:06.908775Z"}], "thread_id": "Thread-3", "execution_time": 0.044605255126953125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.not_null_sat_der_customer_dv_hkey_sat_customer.9bd56e61be", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect dv_hkey_sat_customer\nfrom integration_dp.sat_der_customer\nwhere dv_hkey_sat_customer is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:06.955817Z", "completed_at": "2024-06-19T07:41:07.436358Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:07.443327Z", "completed_at": "2024-06-19T07:41:07.443362Z"}], "thread_id": "Thread-3", "execution_time": 0.5216240882873535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.relationships_sat_der_customer_dv_hkey_hub_customer__dv_hkey_hub_customer__ref_hub_customer_.abef950604", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select dv_hkey_hub_customer as from_field\n    from integration_dp.sat_der_customer\n    where dv_hkey_hub_customer is not null\n),\n\nparent as (\n    select dv_hkey_hub_customer as to_field\n    from integration_dp.hub_customer\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:07.527244Z", "completed_at": "2024-06-19T07:41:07.583311Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:07.591573Z", "completed_at": "2024-06-19T07:41:07.591607Z"}], "thread_id": "Thread-3", "execution_time": 0.14927911758422852, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.unique_sat_der_customer_dv_hkey_sat_customer.77a8380a87", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    dv_hkey_sat_customer as unique_field,\n    count(*) as n_records\n\nfrom integration_dp.sat_der_customer\nwhere dv_hkey_sat_customer is not null\ngroup by dv_hkey_sat_customer\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:07.996959Z", "completed_at": "2024-06-19T07:41:08.118012Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:08.121740Z", "completed_at": "2024-06-19T07:41:08.121762Z"}], "thread_id": "Thread-3", "execution_time": 0.5126855373382568, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ktl_dbt.dim_customer_corecard", "compiled": true, "compiled_code": "with\n    cte_rnk as (\n        select\n            *,\n            row_number() over (\n                partition by dv_hkey_hub_customer, dv_src_ldt order by dv_ldt\n            ) rnk\n        from integration_dp.sat_der_customer_corecard\n        where 1 = 1\n    ),\n    cte_latest_rnk1 as (select * from cte_rnk where rnk = 1),\n    cte_new_hsh_dif as (\n        select\n            *,\n            lag(dv_hsh_dif) over (\n                partition by dv_hkey_hub_customer order by dv_src_ldt\n            ) prev_dv_hsh_dif\n        from cte_latest_rnk1\n    ),\n    cte_dim_customer_corecard as (\n        select\n            hub.dv_hkey_hub_customer sk_customer,\n            hub.cst_no,\n            card_no,\n            card_name,\n            card_full_name,\n            card_type,\n            acct_no,\n            addr_line1,\n            addr_line2,\n            sat.dv_src_ldt as dv_start_date,\n            lead(sat.dv_src_ldt, 1, date '9999-12-31') over (\n                partition by sat.dv_hkey_hub_customer order by sat.dv_src_ldt\n            ) dv_end_date,\n            sat.dv_ldt\n        from cte_new_hsh_dif sat\n        left join\n            integration_dp.hub_customer hub\n            on hub.dv_hkey_hub_customer = sat.dv_hkey_hub_customer\n        where\n            1 = 1\n            and (prev_dv_hsh_dif <> dv_hsh_dif or prev_dv_hsh_dif is null)\n            and sat.dv_cdc_ops <> 'D'\n    ),\n    cte_final as (\n        select\n            dv_ldt as dv_ldt,\n            current_timestamp() as cob_date,\n            cst_no as cn_ma_kh,\n            card_name as cn_ho_ten_kh,\n            cast(null as string) cn_danh_xung,\n            cast(null as string) cn_biet_danh,\n            cast(null as string) cn_gioi_tinh,\n            cast(null as string) cn_dan_toc,\n            cast(null as string) cn_ngay_sinh,\n            cast(null as string) cn_cu_tru,\n            addr_line1 as cn_dc_thuongtru,\n            addr_line2 as cn_dc_tamtru,\n            'Vietnam' as cn_quoc_tich,\n            cast(null as string) cn_sdt_dd,\n            cast(null as string) cn_email,\n            cast(null as string) cn_so_cmnd,\n            cast(null as string) cn_ngaycap_cmnd,\n            cast(null as string) cn_noicap_cmnd,\n            cast(null as string) cn_so_cccd,\n            cast(null as string) cn_ngaycap_cccd,\n            cast(null as string) cn_noicap_cccd,\n            cast(null as string) cn_so_pp,\n            cast(null as string) cn_ngaycap_pp,\n            cast(null as string) cn_noicap_pp,\n            cast(null as string) cn_so_mst,\n            cast(null as string) cn_ngaycap_mst,\n            cast(null as string) cn_noicap_mst,\n            cast(null as string) cn_hoc_van,\n            cast(null as string) cn_nghenghiep,\n            cast(null as string) cn_tt_sohuunha,\n            cast(null as string) cn_so_npt,\n            cast(null as string) cn_hon_nhan,\n            cast(null as string) cn_nguon_tn,\n            cast(null as string) cn_so_tn,\n            cast(null as string) cn_so_tn_cdt,\n            cast(null as string) cn_ngaymo\n        from cte_dim_customer_corecard\n    )\nselect *\nfrom cte_final", "relation_name": "integration_dp.dim_customer_corecard"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:08.132689Z", "completed_at": "2024-06-19T07:41:08.161997Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:08.165663Z", "completed_at": "2024-06-19T07:41:08.165686Z"}], "thread_id": "Thread-3", "execution_time": 0.039971113204956055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ktl_dbt.sat_customer_corecard", "compiled": true, "compiled_code": "-- depends_on: integration_dp.sat_der_customer_corecard\n    with\n        cte_sat_der_latest_records as (\n            select *\n            from\n                (\n                    select\n                        *,\n\n                        row_number() over (\n                            partition by\n                                dv_hkey_hub_customer\n                                \n                            order by\n                                dv_src_ldt desc,dv_kaf_ldt desc,dv_kaf_ofs desc\n                        ) as row_num\n\n                    from integration_dp.sat_der_customer_corecard\n                    where\n                        1 = 1\n                        and dv_src_ldt < date'2024-06-19'\n                )\n            where row_num = 1\n        ),\n\n        cte_sat_latest_records as (\n            select *\n            from\n                (\n                    select\n                        *,\n\n                        row_number() over (\n                            partition by\n                                dv_hkey_hub_customer\n                                \n                            order by\n                                dv_src_ldt desc,dv_kaf_ldt desc,dv_kaf_ofs desc\n                        ) as row_num\n\n                    from integration_dp.sat_customer_corecard\n                )\n            where row_num = 1\n        )\n\n    select\n        dv_hkey_sat_customer_corecard,\n        dv_hkey_hub_customer,\n        dv_hsh_dif,\n\n        \n\n        card_no,\n        card_name,\n        card_full_name,\n        card_type,\n        acct_no,\n        addr_line1,\n        addr_line2,\n        \n\n        dv_kaf_ldt,\n        dv_kaf_ofs,\n        dv_cdc_ops,\n        dv_src_ldt,\n        dv_src_rec,\n        dv_ldt\n        \n\n    from cte_sat_der_latest_records sat_der\n    where\n        not exists (\n            select 1\n            from cte_sat_latest_records sat\n            where\n                sat_der.dv_hkey_hub_customer = sat.dv_hkey_hub_customer\n\n                \n\n                and sat_der.dv_hsh_dif = sat.dv_hsh_dif\n                and lower(sat_der.dv_cdc_ops) not in ('d', 't')\n                and lower(sat.dv_cdc_ops) not in ('d', 't')\n        )", "relation_name": "integration_dp.sat_customer_corecard"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:08.175339Z", "completed_at": "2024-06-19T07:41:09.370665Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:09.376585Z", "completed_at": "2024-06-19T07:41:09.376614Z"}], "thread_id": "Thread-3", "execution_time": 1.208057165145874, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ktl_dbt.sat_snp_customer_corecard", "compiled": true, "compiled_code": "-- depends_on: integration_dp.sat_der_customer_corecard\n    with\n        cte_sat_der_latest_records as (\n            select *\n            from\n                (\n                    select\n                        *,\n\n                        row_number() over (\n                            partition by\n                                dv_hkey_hub_customer\n                                \n                            order by\n                                dv_src_ldt desc,dv_kaf_ldt desc,dv_kaf_ofs desc\n                        ) as row_num\n\n                    from integration_dp.sat_der_customer_corecard\n                    where\n                        1 = 1\n                        and dv_src_ldt < date'2024-06-19'\n                )\n            where row_num = 1\n        ),\n\n        cte_sat_snp_latest_records as (\n            select *\n            from\n                (\n                    select\n                        *,\n\n                        row_number() over (\n                            partition by\n                                dv_hkey_hub_customer\n                                \n                            order by\n                                dv_src_ldt desc,dv_kaf_ldt desc,dv_kaf_ofs desc\n                        ) as row_num\n\n                    from integration_dp.sat_snp_customer_corecard\n                )\n            where row_num = 1\n        )\n\n    select\n        dv_hkey_sat_customer_corecard,\n        dv_hkey_hub_customer,\n        dv_hsh_dif,\n\n        \n\n        card_no,\n        card_name,\n        card_full_name,\n        card_type,\n        acct_no,\n        addr_line1,\n        addr_line2,\n        \n\n        dv_kaf_ldt,\n        dv_kaf_ofs,\n        dv_cdc_ops,\n        dv_src_ldt,\n        dv_src_rec,\n        dv_ldt\n        \n\n    from cte_sat_der_latest_records sat_der\n    where\n        not exists (\n            select 1\n            from cte_sat_snp_latest_records sat_snp\n            where\n                sat_der.dv_hkey_hub_customer = sat_snp.dv_hkey_hub_customer\n\n                \n\n                and sat_der.dv_hsh_dif = sat_snp.dv_hsh_dif\n                and lower(sat_der.dv_cdc_ops) not in ('d', 't')\n                and lower(sat_snp.dv_cdc_ops) not in ('d', 't')\n        )", "relation_name": "integration_dp.sat_snp_customer_corecard"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:09.398067Z", "completed_at": "2024-06-19T07:41:09.440516Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:09.445523Z", "completed_at": "2024-06-19T07:41:09.445554Z"}], "thread_id": "Thread-3", "execution_time": 0.06328797340393066, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.not_null_sat_der_customer_corecard_sat_der_customer_corecard.97d8365687", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sat_der_customer_corecard\nfrom integration_dp.sat_der_customer_corecard\nwhere sat_der_customer_corecard is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:09.516845Z", "completed_at": "2024-06-19T07:41:11.770955Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:11.774177Z", "completed_at": "2024-06-19T07:41:11.774200Z"}], "thread_id": "Thread-3", "execution_time": 2.3151652812957764, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.relationships_sat_der_customer_corecard_dv_hkey_hub_customer__dv_hkey_hub_customer__ref_hub_customer_.fd5611cfee", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select dv_hkey_hub_customer as from_field\n    from integration_dp.sat_der_customer_corecard\n    where dv_hkey_hub_customer is not null\n),\n\nparent as (\n    select dv_hkey_hub_customer as to_field\n    from integration_dp.hub_customer\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:11.792502Z", "completed_at": "2024-06-19T07:41:11.812251Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:11.816399Z", "completed_at": "2024-06-19T07:41:11.816423Z"}], "thread_id": "Thread-3", "execution_time": 0.03244757652282715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.unique_sat_der_customer_corecard_sat_der_customer_corecard.689e3e5f47", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    sat_der_customer_corecard as unique_field,\n    count(*) as n_records\n\nfrom integration_dp.sat_der_customer_corecard\nwhere sat_der_customer_corecard is not null\ngroup by sat_der_customer_corecard\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:11.828270Z", "completed_at": "2024-06-19T07:41:12.348017Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:12.358892Z", "completed_at": "2024-06-19T07:41:12.358917Z"}], "thread_id": "Thread-3", "execution_time": 0.6526041030883789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ktl_dbt.dim_customer_los", "compiled": true, "compiled_code": "with\n    cte_rnk as (\n        select\n            *,\n            row_number() over (\n                partition by dv_hkey_hub_customer, dv_src_ldt order by dv_ldt\n            ) rnk\n        from integration_dp.sat_der_customer_los\n        where 1 = 1\n    ),\n    cte_latest_rnk1 as (select * from cte_rnk where rnk = 1),\n    cte_new_hsh_dif as (\n        select\n            *,\n            lag(dv_hsh_dif) over (\n                partition by dv_hkey_hub_customer order by dv_src_ldt\n            ) prev_dv_hsh_dif\n        from cte_latest_rnk1\n    ),\n    cte_dim_customer_los as (\n        select\n            hub.dv_hkey_hub_customer sk_customer,\n            hub.cst_no,\n            customer_name,\n            credit_no,\n            limit_value,\n            income_levcd,\n            occptn_cd,\n            sat.dv_src_ldt as dv_start_date,\n            lead(sat.dv_src_ldt, 1, date '9999-12-31') over (\n                partition by sat.dv_hkey_hub_customer order by sat.dv_src_ldt\n            ) dv_end_date,\n            sat.dv_ldt\n        from cte_new_hsh_dif sat\n        left join\n            integration_dp.hub_customer hub\n            on hub.dv_hkey_hub_customer = sat.dv_hkey_hub_customer\n        where\n            1 = 1\n            and (prev_dv_hsh_dif <> dv_hsh_dif or prev_dv_hsh_dif is null)\n            and sat.dv_cdc_ops <> 'D'\n    ),\n    cte_final as (\n        select\n            dv_ldt as dv_ldt,\n            current_timestamp() as cob_date,\n            cst_no as cn_ma_kh,\n            customer_name as cn_ho_ten_kh,\n            cast(null as string) cn_danh_xung,\n            cast(null as string) cn_biet_danh,\n            cast(null as string) cn_gioi_tinh,\n            cast(null as string) cn_dan_toc,\n            cast(null as string) cn_ngay_sinh,\n            cast(null as string) cn_cu_tru,\n            cast(null as string) cn_dc_thuongtru,\n            cast(null as string) cn_dc_tamtru,\n            'Vietnam' as cn_quoc_tich,\n            cast(null as string) cn_sdt_dd,\n            cast(null as string) cn_email,\n            cast(null as string) cn_so_cmnd,\n            cast(null as string) cn_ngaycap_cmnd,\n            cast(null as string) cn_noicap_cmnd,\n            cast(null as string) cn_so_cccd,\n            cast(null as string) cn_ngaycap_cccd,\n            cast(null as string) cn_noicap_cccd,\n            cast(null as string) cn_so_pp,\n            cast(null as string) cn_ngaycap_pp,\n            cast(null as string) cn_noicap_pp,\n            cast(null as string) cn_so_mst,\n            cast(null as string) cn_ngaycap_mst,\n            cast(null as string) cn_noicap_mst,\n            cast(null as string) cn_hoc_van,\n            occptn_cd as cn_nghenghiep,\n            cast(null as string) cn_tt_sohuunha,\n            cast(null as string) cn_so_npt,\n            cast(null as string) cn_hon_nhan,\n            income_levcd as cn_nguon_tn,\n            cast(null as string) cn_so_tn,\n            cast(null as string) cn_so_tn_cdt,\n            cast(null as string) cn_ngaymo\n        from cte_dim_customer_los\n    )\nselect *\nfrom cte_final", "relation_name": "integration_dp.dim_customer_los"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:13.052734Z", "completed_at": "2024-06-19T07:41:14.009722Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:14.014318Z", "completed_at": "2024-06-19T07:41:14.014343Z"}], "thread_id": "Thread-3", "execution_time": 1.5227329730987549, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ktl_dbt.sat_customer_los", "compiled": true, "compiled_code": "-- depends_on: integration_dp.sat_der_customer_los\n    with\n        cte_sat_der_latest_records as (\n            select *\n            from\n                (\n                    select\n                        *,\n\n                        row_number() over (\n                            partition by\n                                dv_hkey_hub_customer\n                                \n                            order by\n                                dv_src_ldt desc,dv_kaf_ldt desc,dv_kaf_ofs desc\n                        ) as row_num\n\n                    from integration_dp.sat_der_customer_los\n                    where\n                        1 = 1\n                        and dv_src_ldt < date'2024-06-19'\n                )\n            where row_num = 1\n        ),\n\n        cte_sat_latest_records as (\n            select *\n            from\n                (\n                    select\n                        *,\n\n                        row_number() over (\n                            partition by\n                                dv_hkey_hub_customer\n                                \n                            order by\n                                dv_src_ldt desc,dv_kaf_ldt desc,dv_kaf_ofs desc\n                        ) as row_num\n\n                    from integration_dp.sat_customer_los\n                )\n            where row_num = 1\n        )\n\n    select\n        dv_hkey_sat_customer_los,\n        dv_hkey_hub_customer,\n        dv_hsh_dif,\n\n        \n\n        customer_name,\n        credit_no,\n        limit_value,\n        income_levcd,\n        occptn_cd,\n        \n\n        dv_kaf_ldt,\n        dv_kaf_ofs,\n        dv_cdc_ops,\n        dv_src_ldt,\n        dv_src_rec,\n        dv_ldt\n        \n\n    from cte_sat_der_latest_records sat_der\n    where\n        not exists (\n            select 1\n            from cte_sat_latest_records sat\n            where\n                sat_der.dv_hkey_hub_customer = sat.dv_hkey_hub_customer\n\n                \n\n                and sat_der.dv_hsh_dif = sat.dv_hsh_dif\n                and lower(sat_der.dv_cdc_ops) not in ('d', 't')\n                and lower(sat.dv_cdc_ops) not in ('d', 't')\n        )", "relation_name": "integration_dp.sat_customer_los"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:14.027653Z", "completed_at": "2024-06-19T07:41:14.588089Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:14.591818Z", "completed_at": "2024-06-19T07:41:14.591839Z"}], "thread_id": "Thread-3", "execution_time": 0.573195219039917, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ktl_dbt.sat_snp_customer_los", "compiled": true, "compiled_code": "-- depends_on: integration_dp.sat_der_customer_los\n    with\n        cte_sat_der_latest_records as (\n            select *\n            from\n                (\n                    select\n                        *,\n\n                        row_number() over (\n                            partition by\n                                dv_hkey_hub_customer\n                                \n                            order by\n                                dv_src_ldt desc,dv_kaf_ldt desc,dv_kaf_ofs desc\n                        ) as row_num\n\n                    from integration_dp.sat_der_customer_los\n                    where\n                        1 = 1\n                        and dv_src_ldt < date'2024-06-19'\n                )\n            where row_num = 1\n        ),\n\n        cte_sat_snp_latest_records as (\n            select *\n            from\n                (\n                    select\n                        *,\n\n                        row_number() over (\n                            partition by\n                                dv_hkey_hub_customer\n                                \n                            order by\n                                dv_src_ldt desc,dv_kaf_ldt desc,dv_kaf_ofs desc\n                        ) as row_num\n\n                    from integration_dp.sat_snp_customer_los\n                )\n            where row_num = 1\n        )\n\n    select\n        dv_hkey_sat_customer_los,\n        dv_hkey_hub_customer,\n        dv_hsh_dif,\n\n        \n\n        customer_name,\n        credit_no,\n        limit_value,\n        income_levcd,\n        occptn_cd,\n        \n\n        dv_kaf_ldt,\n        dv_kaf_ofs,\n        dv_cdc_ops,\n        dv_src_ldt,\n        dv_src_rec,\n        dv_ldt\n        \n\n    from cte_sat_der_latest_records sat_der\n    where\n        not exists (\n            select 1\n            from cte_sat_snp_latest_records sat_snp\n            where\n                sat_der.dv_hkey_hub_customer = sat_snp.dv_hkey_hub_customer\n\n                \n\n                and sat_der.dv_hsh_dif = sat_snp.dv_hsh_dif\n                and lower(sat_der.dv_cdc_ops) not in ('d', 't')\n                and lower(sat_snp.dv_cdc_ops) not in ('d', 't')\n        )", "relation_name": "integration_dp.sat_snp_customer_los"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:14.602381Z", "completed_at": "2024-06-19T07:41:14.620348Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:14.625221Z", "completed_at": "2024-06-19T07:41:14.625246Z"}], "thread_id": "Thread-3", "execution_time": 0.03142261505126953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.not_null_sat_der_customer_los_dv_hkey_sat_customer_los.dfc7086dcc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect dv_hkey_sat_customer_los\nfrom integration_dp.sat_der_customer_los\nwhere dv_hkey_sat_customer_los is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:14.648435Z", "completed_at": "2024-06-19T07:41:15.081391Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:15.084848Z", "completed_at": "2024-06-19T07:41:15.084876Z"}], "thread_id": "Thread-3", "execution_time": 0.4491746425628662, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.relationships_sat_der_customer_los_dv_hkey_hub_customer__dv_hkey_hub_customer__ref_hub_customer_.caa85788c2", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select dv_hkey_hub_customer as from_field\n    from integration_dp.sat_der_customer_los\n    where dv_hkey_hub_customer is not null\n),\n\nparent as (\n    select dv_hkey_hub_customer as to_field\n    from integration_dp.hub_customer\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:15.097010Z", "completed_at": "2024-06-19T07:41:15.115662Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:15.119115Z", "completed_at": "2024-06-19T07:41:15.119138Z"}], "thread_id": "Thread-3", "execution_time": 0.02968430519104004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.unique_sat_der_customer_los_dv_hkey_sat_customer_los.d5fe8123d8", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    dv_hkey_sat_customer_los as unique_field,\n    count(*) as n_records\n\nfrom integration_dp.sat_der_customer_los\nwhere dv_hkey_sat_customer_los is not null\ngroup by dv_hkey_sat_customer_los\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:15.129507Z", "completed_at": "2024-06-19T07:41:15.191124Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:15.194969Z", "completed_at": "2024-06-19T07:41:15.194991Z"}], "thread_id": "Thread-3", "execution_time": 0.07196712493896484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.anomaly_threshold_sensitivity", "compiled": true, "compiled_code": "\n\nwith metrics_anomaly_score as (\n\n    select * from integration_dp.metrics_anomaly_score\n\n),\n\nscore_sensitivity as (\n\n    select\n        full_table_name,\n        column_name,\n        metric_name,\n        latest_metric_value,\n        training_avg as metric_avg,\n        training_stddev as metric_stddev,\n        anomaly_score,\n        case when abs(anomaly_score) >= 1.5 then true else false end as `is_anomaly_1_5`,\n        case when abs(anomaly_score) >= 2 then true else false end as `is_anomaly_2`,\n        case when abs(anomaly_score) >= 2.5 then true else false end as `is_anomaly_2_5`,\n        case when abs(anomaly_score) >= 3 then true else false end as `is_anomaly_3`,\n        case when abs(anomaly_score) >= 3.5 then true else false end as `is_anomaly_3_5`,\n        case when abs(anomaly_score) >= 4 then true else false end as `is_anomaly_4`,\n        case when abs(anomaly_score) >= 4.5 then true else false end as `is_anomaly_4_5`\n    from metrics_anomaly_score\n    where abs(anomaly_score) >= 1.5\n\n)\n\nselect * from score_sensitivity", "relation_name": "integration_dp.anomaly_threshold_sensitivity"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:15.216117Z", "completed_at": "2024-06-19T07:41:15.260450Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:15.691424Z", "completed_at": "2024-06-19T07:41:15.691448Z"}], "thread_id": "Thread-3", "execution_time": 0.4859049320220947, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_dbt_models", "compiled": true, "compiled_code": "\n\nwith error_models as (\n  \n    select  model_execution_id,\n            unique_id,\n            invocation_id,\n            name,\n            generated_at,\n            status,\n            full_refresh,\n            message,\n            execution_time,\n            execute_started_at,\n            execute_completed_at,\n            compile_started_at,\n            compile_completed_at,\n            compiled_code,\n            database_name,\n            schema_name,\n            materialization,\n            tags,\n            package_name,\n            path,\n            original_path,\n            owner,\n            alias \n    from integration_dp.model_run_results\n  \n    union all\n  \n    select  model_execution_id,\n            unique_id,\n            invocation_id,\n            name,\n            generated_at,\n            status,\n            full_refresh,\n            message,\n            execution_time,\n            execute_started_at,\n            execute_completed_at,\n            compile_started_at,\n            compile_completed_at,\n            compiled_code,\n            database_name,\n            schema_name,\n            materialization,\n            tags,\n            package_name,\n            path,\n            original_path,\n            owner,\n            alias  \n  from integration_dp.snapshot_run_results\n)\n\n\nselect model_execution_id as alert_id,\n       unique_id,\n       cast(generated_at as timestamp) as detected_at,\n       database_name,\n       materialization,\n       path,\n       original_path,\n       schema_name,\n       message,\n       owner as owners,\n       tags,\n       alias,\n       status,\n       full_refresh\nfrom error_models\nwhere True and lower(status) != 'success'and lower(status) != 'skipped'", "relation_name": "integration_dp.alerts_dbt_models"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:15.778860Z", "completed_at": "2024-06-19T07:41:15.816622Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:15.820186Z", "completed_at": "2024-06-19T07:41:15.820211Z"}], "thread_id": "Thread-3", "execution_time": 0.10548591613769531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.not_null_lsat_customer_account_dv_hkey_lnk_customer_account.5e04b39456", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect dv_hkey_lnk_customer_account\nfrom integration_dp.lsat_customer_account\nwhere dv_hkey_lnk_customer_account is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:15.844274Z", "completed_at": "2024-06-19T07:41:16.211481Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:16.214657Z", "completed_at": "2024-06-19T07:41:16.214677Z"}], "thread_id": "Thread-3", "execution_time": 0.41397643089294434, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.not_null_lsat_customer_account_dv_hkey_lsat_customer_account.e54b966b12", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect dv_hkey_lsat_customer_account\nfrom integration_dp.lsat_customer_account\nwhere dv_hkey_lsat_customer_account is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:16.259562Z", "completed_at": "2024-06-19T07:41:16.354059Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:16.365539Z", "completed_at": "2024-06-19T07:41:16.365566Z"}], "thread_id": "Thread-3", "execution_time": 0.11578583717346191, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.relationships_lsat_customer_account_dv_hkey_lnk_customer_account__dv_hkey_lnk_customer_account__ref_lnk_customer_account_.dbf89a45b3", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select dv_hkey_lnk_customer_account as from_field\n    from integration_dp.lsat_customer_account\n    where dv_hkey_lnk_customer_account is not null\n),\n\nparent as (\n    select dv_hkey_lnk_customer_account as to_field\n    from integration_dp.lnk_customer_account\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:16.794746Z", "completed_at": "2024-06-19T07:41:16.879018Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:16.882851Z", "completed_at": "2024-06-19T07:41:16.882873Z"}], "thread_id": "Thread-3", "execution_time": 0.5088722705841064, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.unique_lsat_customer_account_dv_hkey_lsat_customer_account.a8f09ccb15", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    dv_hkey_lsat_customer_account as unique_field,\n    count(*) as n_records\n\nfrom integration_dp.lsat_customer_account\nwhere dv_hkey_lsat_customer_account is not null\ngroup by dv_hkey_lsat_customer_account\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:16.900093Z", "completed_at": "2024-06-19T07:41:16.927535Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:16.931486Z", "completed_at": "2024-06-19T07:41:16.931510Z"}], "thread_id": "Thread-3", "execution_time": 0.49363183975219727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.not_null_dim_account_sk_account.9bb2da36b7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sk_account\nfrom integration_dp.dim_account\nwhere sk_account is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:17.428557Z", "completed_at": "2024-06-19T07:41:17.486664Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:17.492176Z", "completed_at": "2024-06-19T07:41:17.492197Z"}], "thread_id": "Thread-3", "execution_time": 0.08809995651245117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.unique_dim_account_sk_account.4096223b1b", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    sk_account as unique_field,\n    count(*) as n_records\n\nfrom integration_dp.dim_account\nwhere sk_account is not null\ngroup by sk_account\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:17.516906Z", "completed_at": "2024-06-19T07:41:17.579134Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:17.976997Z", "completed_at": "2024-06-19T07:41:17.977025Z"}], "thread_id": "Thread-3", "execution_time": 0.46686291694641113, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.not_null_sat_account_dv_hkey_sat_account.9533920b00", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect dv_hkey_sat_account\nfrom integration_dp.sat_account\nwhere dv_hkey_sat_account is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:18.706368Z", "completed_at": "2024-06-19T07:41:18.744237Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:18.748105Z", "completed_at": "2024-06-19T07:41:18.748125Z"}], "thread_id": "Thread-3", "execution_time": 0.6565580368041992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.relationships_sat_account_dv_hkey_hub_account__dv_hkey_hub_account__ref_hub_account_.13420cfc9e", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select dv_hkey_hub_account as from_field\n    from integration_dp.sat_account\n    where dv_hkey_hub_account is not null\n),\n\nparent as (\n    select dv_hkey_hub_account as to_field\n    from integration_dp.hub_account\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:18.759321Z", "completed_at": "2024-06-19T07:41:18.812585Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:18.816135Z", "completed_at": "2024-06-19T07:41:18.816159Z"}], "thread_id": "Thread-3", "execution_time": 0.06671428680419922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.unique_sat_account_dv_hkey_sat_account.b1d39f43d3", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    dv_hkey_sat_account as unique_field,\n    count(*) as n_records\n\nfrom integration_dp.sat_account\nwhere dv_hkey_sat_account is not null\ngroup by dv_hkey_sat_account\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:18.834340Z", "completed_at": "2024-06-19T07:41:18.854301Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:18.858965Z", "completed_at": "2024-06-19T07:41:18.858990Z"}], "thread_id": "Thread-3", "execution_time": 0.0348505973815918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.not_null_sat_snp_account_dv_hkey_sat_account.c7e1e00037", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect dv_hkey_sat_account\nfrom integration_dp.sat_snp_account\nwhere dv_hkey_sat_account is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:19.270757Z", "completed_at": "2024-06-19T07:41:19.305509Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:19.309429Z", "completed_at": "2024-06-19T07:41:19.309450Z"}], "thread_id": "Thread-3", "execution_time": 0.046422481536865234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.relationships_sat_snp_account_dv_hkey_hub_account__dv_hkey_hub_account__ref_hub_account_.4c9478c100", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select dv_hkey_hub_account as from_field\n    from integration_dp.sat_snp_account\n    where dv_hkey_hub_account is not null\n),\n\nparent as (\n    select dv_hkey_hub_account as to_field\n    from integration_dp.hub_account\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:19.318646Z", "completed_at": "2024-06-19T07:41:19.337124Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:19.341488Z", "completed_at": "2024-06-19T07:41:19.341518Z"}], "thread_id": "Thread-3", "execution_time": 0.029524564743041992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.unique_sat_snp_account_dv_hkey_sat_account.2d700c3d85", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    dv_hkey_sat_account as unique_field,\n    count(*) as n_records\n\nfrom integration_dp.sat_snp_account\nwhere dv_hkey_sat_account is not null\ngroup by dv_hkey_sat_account\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:19.353863Z", "completed_at": "2024-06-19T07:41:19.737960Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:19.743569Z", "completed_at": "2024-06-19T07:41:19.743594Z"}], "thread_id": "Thread-3", "execution_time": 0.3972461223602295, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.not_null_sat_customer_dv_hkey_sat_customer.6adb9ccfd5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect dv_hkey_sat_customer\nfrom integration_dp.sat_customer\nwhere dv_hkey_sat_customer is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:19.755963Z", "completed_at": "2024-06-19T07:41:19.825003Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:19.832578Z", "completed_at": "2024-06-19T07:41:19.832600Z"}], "thread_id": "Thread-3", "execution_time": 0.09001731872558594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.relationships_sat_customer_dv_hkey_hub_customer__dv_hkey_hub_customer__ref_hub_customer_.8b5d653837", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select dv_hkey_hub_customer as from_field\n    from integration_dp.sat_customer\n    where dv_hkey_hub_customer is not null\n),\n\nparent as (\n    select dv_hkey_hub_customer as to_field\n    from integration_dp.hub_customer\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:19.853092Z", "completed_at": "2024-06-19T07:41:19.894184Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:19.897664Z", "completed_at": "2024-06-19T07:41:19.897689Z"}], "thread_id": "Thread-3", "execution_time": 0.05471205711364746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.unique_sat_customer_dv_hkey_sat_customer.96a2ef0f81", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    dv_hkey_sat_customer as unique_field,\n    count(*) as n_records\n\nfrom integration_dp.sat_customer\nwhere dv_hkey_sat_customer is not null\ngroup by dv_hkey_sat_customer\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:19.919961Z", "completed_at": "2024-06-19T07:41:20.258667Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:20.263081Z", "completed_at": "2024-06-19T07:41:20.263104Z"}], "thread_id": "Thread-3", "execution_time": 0.35629796981811523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.not_null_sat_snp_customer_dv_hkey_sat_customer.91f7a5098c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect dv_hkey_sat_customer\nfrom integration_dp.sat_snp_customer\nwhere dv_hkey_sat_customer is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:20.287816Z", "completed_at": "2024-06-19T07:41:20.327222Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:20.331019Z", "completed_at": "2024-06-19T07:41:20.331044Z"}], "thread_id": "Thread-3", "execution_time": 0.053785085678100586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.relationships_sat_snp_customer_dv_hkey_hub_customer__dv_hkey_hub_customer__ref_hub_customer_.90c3f03f29", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select dv_hkey_hub_customer as from_field\n    from integration_dp.sat_snp_customer\n    where dv_hkey_hub_customer is not null\n),\n\nparent as (\n    select dv_hkey_hub_customer as to_field\n    from integration_dp.hub_customer\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:20.360996Z", "completed_at": "2024-06-19T07:41:20.409534Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:20.413783Z", "completed_at": "2024-06-19T07:41:20.413808Z"}], "thread_id": "Thread-3", "execution_time": 0.06585335731506348, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.unique_sat_snp_customer_dv_hkey_sat_customer.78af4aa2f4", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    dv_hkey_sat_customer as unique_field,\n    count(*) as n_records\n\nfrom integration_dp.sat_snp_customer\nwhere dv_hkey_sat_customer is not null\ngroup by dv_hkey_sat_customer\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:20.430498Z", "completed_at": "2024-06-19T07:41:20.769809Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:20.773163Z", "completed_at": "2024-06-19T07:41:20.773186Z"}], "thread_id": "Thread-3", "execution_time": 0.3486013412475586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.not_null_sat_snp_customer_corecard_dv_hkey_sat_customer.22e61006a4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect dv_hkey_sat_customer\nfrom integration_dp.sat_snp_customer_corecard\nwhere dv_hkey_sat_customer is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:20.787441Z", "completed_at": "2024-06-19T07:41:20.814080Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:20.817709Z", "completed_at": "2024-06-19T07:41:20.817732Z"}], "thread_id": "Thread-3", "execution_time": 0.036135196685791016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.relationships_sat_snp_customer_corecard_dv_hkey_hub_customer__dv_hkey_hub_customer__ref_hub_customer_.4fbd9e4576", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select dv_hkey_hub_customer as from_field\n    from integration_dp.sat_snp_customer_corecard\n    where dv_hkey_hub_customer is not null\n),\n\nparent as (\n    select dv_hkey_hub_customer as to_field\n    from integration_dp.hub_customer\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:20.835093Z", "completed_at": "2024-06-19T07:41:21.918440Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:21.934984Z", "completed_at": "2024-06-19T07:41:21.935032Z"}], "thread_id": "Thread-3", "execution_time": 1.1148364543914795, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.unique_sat_snp_customer_corecard_dv_hkey_sat_customer.1c2362da26", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    dv_hkey_sat_customer as unique_field,\n    count(*) as n_records\n\nfrom integration_dp.sat_snp_customer_corecard\nwhere dv_hkey_sat_customer is not null\ngroup by dv_hkey_sat_customer\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:21.949079Z", "completed_at": "2024-06-19T07:41:21.981693Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:21.991695Z", "completed_at": "2024-06-19T07:41:21.991722Z"}], "thread_id": "Thread-3", "execution_time": 0.049263715744018555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.not_null_sat_snp_customer_los_dv_hkey_sat_customer.d8c9df0e6e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect dv_hkey_sat_customer\nfrom integration_dp.sat_snp_customer_los\nwhere dv_hkey_sat_customer is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:22.001426Z", "completed_at": "2024-06-19T07:41:22.437147Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:22.440588Z", "completed_at": "2024-06-19T07:41:22.440611Z"}], "thread_id": "Thread-3", "execution_time": 0.4477071762084961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.relationships_sat_snp_customer_los_dv_hkey_hub_customer__dv_hkey_hub_customer__ref_hub_customer_.d75670c240", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select dv_hkey_hub_customer as from_field\n    from integration_dp.sat_snp_customer_los\n    where dv_hkey_hub_customer is not null\n),\n\nparent as (\n    select dv_hkey_hub_customer as to_field\n    from integration_dp.hub_customer\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-19T07:41:22.454957Z", "completed_at": "2024-06-19T07:41:22.484628Z"}, {"name": "execute", "started_at": "2024-06-19T07:41:22.488076Z", "completed_at": "2024-06-19T07:41:22.488096Z"}], "thread_id": "Thread-3", "execution_time": 0.04114127159118652, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ktl_dbt.unique_sat_snp_customer_los_dv_hkey_sat_customer.3bbdf3e9b7", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    dv_hkey_sat_customer as unique_field,\n    count(*) as n_records\n\nfrom integration_dp.sat_snp_customer_los\nwhere dv_hkey_sat_customer is not null\ngroup by dv_hkey_sat_customer\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 280.57566118240356, "args": {"quiet": false, "show_resource_report": false, "indirect_selection": "eager", "invocation_command": "dbt compile --target-path /builds/de-team/dbt/ktl_dbt/prod-artifacts", "partial_parse_file_diff": true, "select": [], "use_colors_file": true, "static_parser": true, "write_json": true, "strict_mode": false, "printer_width": 80, "send_anonymous_usage_stats": true, "exclude": [], "log_format": "default", "inject_ephemeral_ctes": true, "defer": false, "target_path": "/builds/de-team/dbt/ktl_dbt/prod-artifacts", "introspect": true, "enable_legacy_logger": false, "log_level_file": "debug", "populate_cache": true, "project_dir": "/builds/de-team/dbt/ktl_dbt", "macro_debugging": false, "favor_state": false, "vars": {}, "log_path": "/builds/de-team/dbt/ktl_dbt/logs", "log_file_max_bytes": 10485760, "cache_selected_only": false, "profiles_dir": "/builds/de-team/dbt/.dbt", "warn_error_options": {"include": [], "exclude": []}, "partial_parse": true, "version_check": true, "which": "compile", "log_level": "info", "output": "text", "log_format_file": "debug", "use_colors": true, "print": true}}